{"version":3,"sources":["App.module.scss","assets/images/image.svg","components/ContentListItem.module.scss","store/Slices/apiCall.js","assets/functions/errorFormat.js","hooks/usePost.js","components/AppBar.js","assets/functions/payment.js","components/Rating.js","assets/functions/util.js","components/CourseCard.js","components/Section.js","hooks/useGet.js","components/CircleSpring.js","pages/Home.js","hooks/useRpay.js","components/OtpVerification.js","pages/SignIn.js","pages/SignUp.js","pages/NotFound.js","pages/UnAuthorized.js","components/Footer.js","components/ContentListItem.js","pages/Course.js","pages/Profile.js","pages/About.js","pages/ViewAll.js","components/FileUpload.js","pages/AddItem.js","pages/Help.js","components/MarkdownEditor.js","pages/Editor.js","store/Slices/node.js","hooks/useAsync.js","store/Slices/nodes.js","components/Admin/AddNode.js","components/Admin/NodeCard.js","components/Admin/ViewNodes.js","store/Slices/courses.js","store/Slices/goals.js","store/Slices/projects.js","store/Slices/exams.js","store/Slices/assignments.js","store/Slices/instructors.js","components/Admin/ViewCourses.js","components/Admin/ViewGoals.js","components/Admin/ViewProjects.js","components/Admin/AddCourse.js","components/Admin/AddProject.js","components/Admin/AddGoal.js","pages/Admin.js","App.js","store/index.js","serviceWorker.js","index.js"],"names":["module","exports","initStage","loading","success","error","counterSlice","createSlice","name","initialState","reducers","setLoading","state","setSuccess","setError","reset","actions","format","err","errors","forEach","e","param","msg","useState","setErr","response","setResponse","dispatch","useDispatch","history","useHistory","url","data","a","config","headers","authorization","localStorage","getItem","axios","post","res","console","dir","message","undefined","status","refreshToken","tokenRes","setItem","accessToken","clear","replace","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","list","width","fullList","MenuAppBar","classes","openDrawer","setOpenDrawer","location","useLocation","usePost","toggleDrawer","event","type","key","useEffect","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","onClick","Typography","variant","Link","underline","href","Button","push","Drawer","open","onClose","role","onKeyDown","List","ListItem","button","selected","pathname","ListItemIcon","ListItemText","primary","Divider","window","id","typeName","log","verifyPayment","paymentId","orderId","signature","token","option","amount","currency","description","image","order_id","handler","razorpay_payment_id","razorpay_order_id","razorpay_signature","then","r","catch","prefill","Razorpay","Rating","rating","totalRating","fontSize","style","display","Array","from","Math","floor","keys","map","el","ceil","marginLeft","defaultProps","toDate","date","d","Date","getDate","getMonth","getFullYear","getYTVideoThumbnail","split","card","height","flexDirection","hover","cursor","instructorName","fontWeight","paddingTop","marginBottom","cardMedia","cardContent","sectionContainer","backgroundColor","sectionTitle","padding","priceAction","marginTop","justifyContent","alignItems","CourseCard","creator","lastUpdated","price","img","video","creatorId","Card","CardMedia","CardContent","gutterBottom","component","substring","length","target","Grid","container","justify","item","xs","size","payment","paddingBottom","viewAllCard","arrowIcon","background","borderRadius","Section","viewAll","_id","sm","md","lg","updated","Number","totalUser","params","get","CircularProgress","icon","heroContent","palette","paper","heroButtons","cardGrid","Album","useGet","script","document","createElement","src","async","body","appendChild","removeChild","Container","maxWidth","align","Image","alt","heroDescription","paragraph","courses","margin","goals","projects","CircleSpring","OtpVerification","value","onChange","submitHandler","helperText","setOpen","otp","setOtp","apiCallState","useSelector","apiCall","Dialog","aria-labelledby","LinearProgress","DialogTitle","DialogContent","DialogContentText","TextField","required","fullWidth","label","autoFocus","DialogActions","disabled","avatar","secondary","main","form","submit","link","dark","textDecoration","SignIn","email","setEmail","cb","otpRes","otpErr","otpCb","signOutAll","setSignOutAl","otpDialog","setOtpDialog","Object","CssBaseline","Avatar","noValidate","onSubmit","preventDefault","autoComplete","to","SignUp","setState","changeState","register","goBack","lockIcon","footer","mainFooter","Footer","ContentListItem","time","starIcon","nested","paddingLeft","contentItem","videoList","heading","creatorDetails","detailsSection","secondaryText","opacity","useParams","React","n","expandContent","setExpandContent","handleExpandClick","num","val","idx","course","weWillCover","cover","numberOfContent","totalTime","contents","Collapse","in","timeout","unmountOnExit","content","requirements","grid","requirement","courseFor","cFor","resources","resource","uri","details","textAlign","customAvatar","join","about","mainAbout","cards","FileUpload","Box","p","acceptedFiles","filesLimit","dropzoneText","files","formControl","leftMargin1st","leftMargin2nd","setOptions","buttonList","complex","callBackSave","MarkdownEditor","markdown","quiz","exam","assignment","nodeSlice","setNode","action","payload","setName","setDescription","setImg","setVideo","setMarkdown","setExam","setQuiz","setAssignment","setType","addResource","toString","deleteResource","filter","updateResource","handleError","usePut","put","nodesSlice","fetch","nodes","setFetch","addNode","node","deleteNode","updateNode","s","setResource","imgBtn","videoImg","contentUpload","setContentUpload","handleMouseDownPassword","resPut","setTimeout","FormControl","InputLabel","Select","labelId","MenuItem","FormHelperText","htmlFor","OutlinedInput","endAdornment","InputAdornment","onMouseDown","labelWidth","videoBtn","paddingRight","wordWrap","resourceBtn","NodeCard","switchToAddNode","dialog","setDialog","delete","useDelete","resDel","errDel","del","resGet","aria-describedby","ViewNodes","coursesSlice","addCourse","deleteCourse","noes","updateCourse","goalsSlice","addGoal","goal","deleteGoal","updateGoal","projectsSlice","addProject","project","deleteProject","updateProject","examsSlice","exams","addExam","deleteExam","updateExam","assignmentsSlice","assignments","addAssignment","deleteAssignment","updateAssignment","instructorsSlice","instructors","addInstructor","instructor","deleteInstructor","updateInstructor","vide","TabPanel","props","children","index","other","hidden","a11yProps","ScrollableTabsButtonAuto","setValue","fetchNodes","fetchGoals","fetchProjects","fetchCourses","fetchAssignments","fetchExams","fetchInstructors","setNodes","setCourses","setProjects","setGoals","setAssignments","setExams","setInstructors","setErrCourses","setErrGoals","setErrNodes","setErrProjects","setErrAssignments","setErrInstructors","setErrExams","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","AddNode","ViewCourses","AddCourse","ViewProjects","AddProject","ViewGoals","AddGoal","App","app","mainContent","exact","path","Course","Profile","About","ViewAll","Editor","NotFound","UnAuthorized","configureStore","reducer","apiCallReducer","nodeReducer","nodesReducer","coursesReducer","projectsReducer","goalsReducer","examsReducer","assignmentsReducer","instructorsReducer","Boolean","hostname","match","defaults","baseURL","ReactDOM","render","StrictMode","store","basename","process","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ad388046.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1D1rd\",\"main\":\"App_main__3fsHX\",\"mainContent\":\"App_mainContent__2_g4D\"};","module.exports = __webpack_public_path__ + \"static/media/image.1b61dc31.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContentListItem_container__mRG_n\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initStage = {\r\n  loading: false,\r\n  success: false,\r\n  error: false,\r\n};\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'apiCall',\r\n  initialState: {\r\n    ...initStage,\r\n  },\r\n  reducers: {\r\n    setLoading: (state) => {\r\n      state.loading = true;\r\n      state.success = false;\r\n      state.error = false;\r\n    },\r\n    setSuccess: (state) => {\r\n      state.loading = false;\r\n      state.success = true;\r\n      state.error = false;\r\n    },\r\n    setError: (state) => {\r\n      state.loading = false;\r\n      state.success = false;\r\n      state.error = true;\r\n    },\r\n    reset: (state) => {\r\n      state = { ...initStage };\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setLoading, setSuccess, setError, reset } = counterSlice.actions;\r\n\r\nexport const selectApiCall = (state) => state.ApiCall;\r\n\r\nexport default counterSlice.reducer;\r\n","// eslint-disable-next-line import/prefer-default-export\r\nexport const format = (err) => {\r\n  let errors = {};\r\n  err.forEach((e) => {\r\n    errors = { ...errors, [e.param]: e.msg };\r\n  });\r\n  return errors;\r\n};\r\n","import { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { setError, setLoading, setSuccess, reset } from '../store/Slices/apiCall';\r\nimport { format } from '../assets/functions/errorFormat';\r\n\r\nexport default () => {\r\n  const [err, setErr] = useState(null);\r\n  const [response, setResponse] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const cb = async (\r\n    url,\r\n    data,\r\n    config = {\r\n      headers: {\r\n        authorization: localStorage.getItem('accessToken'),\r\n      },\r\n    }\r\n  ) => {\r\n    dispatch(setLoading());\r\n    try {\r\n      const res = await axios.post(url, data, config);\r\n      setResponse(res.data);\r\n      setErr(null);\r\n      dispatch(setSuccess());\r\n    } catch (error) {\r\n      console.dir(error);\r\n      if (error?.message === 'Network Error' && error.response === undefined) {\r\n        setErr({ error: 'Network Error' });\r\n      }\r\n      if (error?.response?.status === 401) {\r\n        try {\r\n          const tokenRes = await axios.post('/auth/generate-access-token', {\r\n            refreshToken: localStorage.getItem('refreshToken'),\r\n          });\r\n          localStorage.setItem('accessToken', tokenRes.data.accessToken);\r\n          setSuccess(null);\r\n          setErr(null);\r\n          dispatch(reset());\r\n        } catch (e) {\r\n          localStorage.clear();\r\n          history.replace('/unauthorized');\r\n        }\r\n      } else if (error?.response?.status === 422) {\r\n        setErr(format(error?.response?.data?.errors));\r\n        setSuccess(null);\r\n        dispatch(setError());\r\n      } else if (error?.response?.status === 429) {\r\n        setErr({ error: error?.response?.data });\r\n        setSuccess(null);\r\n        dispatch(setError());\r\n      } else {\r\n        setSuccess(null);\r\n        dispatch(setError());\r\n      }\r\n    }\r\n  };\r\n\r\n  return [response, err, cb];\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport List from '@material-ui/core/List';\r\nimport Link from '@material-ui/core/Link';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ClassIcon from '@material-ui/icons/Class';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport { Divider, Button } from '@material-ui/core';\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport usePost from '../hooks/usePost';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const [res, err, post] = usePost();\r\n\r\n  const toggleDrawer = (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setOpenDrawer(!openDrawer);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (res && !err) localStorage.clear();\r\n  }, [res, err]);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <AppBar position=\"relative\">\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              onClick={toggleDrawer}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              <Link color=\"inherit\" underline=\"none\" href=\"/\">\r\n                Courses\r\n              </Link>\r\n            </Typography>\r\n\r\n            <div>\r\n              {!localStorage.getItem('accessToken') && (\r\n                <Button variant=\"outlined\" color=\"inherit\" onClick={() => history.push('/sign-up')}>\r\n                  Sign Up\r\n                </Button>\r\n              )}\r\n              <IconButton\r\n                color=\"inherit\"\r\n                onClick={() => {\r\n                  if (localStorage.getItem('accessToken')) history.push('/profile/me');\r\n                  else history.push('/sign-in');\r\n                }}\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n      <Drawer open={openDrawer} onClose={toggleDrawer}>\r\n        <div\r\n          className={classes.list}\r\n          role=\"presentation\"\r\n          onClick={toggleDrawer}\r\n          onKeyDown={toggleDrawer}\r\n        >\r\n          <List>\r\n            <ListItem button onClick={() => history.push('/')} selected={location.pathname === '/'}>\r\n              <ListItemIcon>\r\n                <HomeIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Home\" />\r\n            </ListItem>\r\n            {!localStorage.getItem('accessToken') && (\r\n              <>\r\n                <ListItem\r\n                  button\r\n                  onClick={() => history.push('/sign-in')}\r\n                  selected={location.pathname === '/sign-in'}\r\n                >\r\n                  <ListItemIcon>\r\n                    <LockOpenIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Sign In\" />\r\n                </ListItem>\r\n                <ListItem\r\n                  button\r\n                  onClick={() => history.push('/sign-up')}\r\n                  selected={location.pathname === '/sign-up'}\r\n                >\r\n                  <ListItemIcon>\r\n                    <LockOpenIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Sign Up\" />\r\n                </ListItem>\r\n              </>\r\n            )}\r\n            {localStorage.getItem('accessToken') && (\r\n              <ListItem\r\n                button\r\n                onClick={() => history.push('/profile/me')}\r\n                selected={location.pathname === '/profile/me'}\r\n              >\r\n                <ListItemIcon>\r\n                  <AccountCircle />\r\n                </ListItemIcon>\r\n\r\n                <ListItemText primary=\"My Profile\" />\r\n              </ListItem>\r\n            )}\r\n            <ListItem\r\n              button\r\n              onClick={() => history.push('/view-all/courses')}\r\n              selected={location.pathname === '/view-all/courses'}\r\n            >\r\n              <ListItemIcon>\r\n                <ClassIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Courses\" />\r\n            </ListItem>\r\n            <ListItem\r\n              button\r\n              onClick={() => history.push('/view-all/projects')}\r\n              selected={location.pathname === '/view-all/projects'}\r\n            >\r\n              <ListItemIcon>\r\n                <AssignmentIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Projects\" />\r\n            </ListItem>\r\n            <ListItem\r\n              button\r\n              onClick={() => history.push('/view-all/goals')}\r\n              selected={location.pathname === '/view-all/goals'}\r\n            >\r\n              <ListItemIcon>\r\n                <CategoryIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Goals\" />\r\n            </ListItem>\r\n\r\n            {localStorage.getItem('role') === 'admin' && (\r\n              <>\r\n                <Divider />\r\n                <ListItem\r\n                  button\r\n                  onClick={() => history.push('/admin')}\r\n                  selected={location.pathname === '/admin'}\r\n                >\r\n                  <ListItemIcon>\r\n                    <DashboardIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Admin Panel\" />\r\n                </ListItem>\r\n                <ListItem\r\n                  button\r\n                  onClick={() => history.push('/editor')}\r\n                  selected={location.pathname === '/editor'}\r\n                >\r\n                  <ListItemIcon>\r\n                    <EditIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Editor\" />\r\n                </ListItem>\r\n              </>\r\n            )}\r\n            <Divider />\r\n            <ListItem\r\n              button\r\n              onClick={() => history.push('/about')}\r\n              selected={location.pathname === '/about'}\r\n            >\r\n              <ListItemIcon>\r\n                <InfoIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"About\" />\r\n            </ListItem>\r\n            <ListItem\r\n              button\r\n              onClick={() => history.push('/help')}\r\n              selected={location.pathname === '/help'}\r\n            >\r\n              <ListItemIcon>\r\n                <HelpIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Help\" />\r\n            </ListItem>\r\n            <ListItem\r\n              button\r\n              onClick={() => window.open('https://meghoshpritam.netlify.app', '_blank')}\r\n              selected={location.pathname === '/course'}\r\n            >\r\n              <ListItemIcon>\r\n                <BugReportIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Report a Bug\" />\r\n            </ListItem>\r\n            {localStorage.getItem('accessToken') && (\r\n              <>\r\n                <Divider />\r\n                <ListItem\r\n                  button\r\n                  onClick={() => {\r\n                    post('/auth/sign-out', { refreshToken: localStorage.getItem('refreshToken') });\r\n                  }}\r\n                >\r\n                  <ListItemIcon>\r\n                    <ExitToAppIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Sign Out\" />\r\n                </ListItem>\r\n              </>\r\n            )}\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nexport default async ({ type, id }) => {\r\n  let res;\r\n  try {\r\n    const typeName = `${type}Id`;\r\n    res = await axios.post(\r\n      '/student/create-order',\r\n      { [typeName]: id },\r\n      {\r\n        headers: {\r\n          authorization: localStorage.getItem('accessToken'),\r\n        },\r\n      }\r\n    );\r\n    // TODO: check price is 0, then show as added else open payment system\r\n  } catch (err) {\r\n    console.log('error: ', err, err.response);\r\n    return;\r\n  }\r\n  console.log('print', res?.data);\r\n\r\n  console.log('status: ', res.status);\r\n  if (res.status === 201) {\r\n    console.log('enrolled');\r\n  } else {\r\n    const verifyPayment = async ({ paymentId, orderId, signature, token }) => {\r\n      try {\r\n        const response = await axios.post(\r\n          '/student/verify-order',\r\n          { token, paymentId, orderId, signature },\r\n          {\r\n            headers: {\r\n              authorization: localStorage.getItem('accessToken'),\r\n            },\r\n          }\r\n        );\r\n        return response.data;\r\n      } catch (err) {\r\n        return err?.response;\r\n      }\r\n    };\r\n\r\n    const option = {\r\n      key: 'rzp_test_E5IMZYa1Ag0kzr',\r\n      amount: res.data.data.amount,\r\n      currency: res.data.data.currency,\r\n      name: 'Acme Corp',\r\n      description: 'Test Transaction',\r\n      image: 'https://example.com/your_logo',\r\n      order_id: res.data.data.id,\r\n      handler(response) {\r\n        verifyPayment({\r\n          token: res.data.token,\r\n          paymentId: response.razorpay_payment_id,\r\n          orderId: response.razorpay_order_id,\r\n          signature: response.razorpay_signature,\r\n        })\r\n          .then((r) => {\r\n            console.log(('payment success: ', r));\r\n          })\r\n          .catch((e) => {\r\n            console.log('payment failed: ', e);\r\n          });\r\n      },\r\n      prefill: {\r\n        name: 'Gaurav Kumar',\r\n      },\r\n    };\r\n    try {\r\n      const rPay = new window.Razorpay(option);\r\n\r\n      rPay.open();\r\n    } catch (err) {\r\n      console.log('rPayErr', err);\r\n    }\r\n  }\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\r\n\r\nconst Rating = ({ rating, totalRating, fontSize }) => {\r\n  const style = {\r\n    fontSize,\r\n    color: '#ffc400',\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex' }} color=\"textPrimary\">\r\n      <div>\r\n        {Array.from(Array(Math.floor(rating)).keys()).map((el) => (\r\n          <StarIcon style={style} key={el} />\r\n        ))}\r\n        {rating - Math.floor(rating) > 0.2 && <StarHalfIcon style={style} />}\r\n        {Array.from(\r\n          Array(\r\n            rating - Math.floor(rating) > 0.2 ? 5 - Math.ceil(rating) : 5 - Math.floor(rating)\r\n          ).keys()\r\n        ).map((el) => (\r\n          <StarBorderIcon style={style} key={el} />\r\n        ))}\r\n      </div>\r\n      <div style={{ fontSize: fontSize - 3, marginLeft: 4 }}>\r\n        <strong> {rating} </strong>({totalRating})\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nRating.propTypes = {\r\n  rating: PropTypes.number.isRequired,\r\n  totalRating: PropTypes.number.isRequired,\r\n  fontSize: PropTypes.number,\r\n};\r\n\r\nRating.defaultProps = {\r\n  fontSize: 15,\r\n};\r\n\r\nexport default Rating;\r\n","// eslint-disable-next-line import/prefer-default-export\r\nexport const toDate = (date) => {\r\n  const d = new Date(date);\r\n\r\n  return `${d.getDate()}/${d.getMonth()}/${d.getFullYear()}`;\r\n};\r\n\r\nexport const getYTVideoThumbnail = (url) => {\r\n  return `https://img.youtube.com/vi/${url.split('?v=')[1].split('&')[0]}/0.jpg`;\r\n};\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport Link from '@material-ui/core/Link';\r\nimport payment from '../assets/functions/payment';\r\nimport Rating from './Rating';\r\nimport { getYTVideoThumbnail } from '../assets/functions/util';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  hover: {\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n  instructorName: {\r\n    fontWeight: 'bold',\r\n    paddingTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  sectionContainer: {\r\n    backgroundColor: 'red',\r\n  },\r\n  sectionTitle: {\r\n    padding: theme.spacing(2, 0),\r\n  },\r\n\r\n  priceAction: {\r\n    marginTop: theme.spacing(1),\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    // width: '100%',\r\n  },\r\n}));\r\n\r\nconst CourseCard = ({\r\n  title,\r\n  description,\r\n  creator,\r\n  lastUpdated,\r\n  rating,\r\n  totalRating,\r\n  price,\r\n  img,\r\n  video,\r\n  type,\r\n  id,\r\n  creatorId,\r\n}) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      {(img || video) && (\r\n        <CardMedia\r\n          className={`${classes.cardMedia} ${classes.hover}`}\r\n          image={video ? getYTVideoThumbnail(video) : img}\r\n          title={`${title}-image`}\r\n          onClick={() => {\r\n            history.push(`/view/${type}/${id}`);\r\n          }}\r\n        />\r\n      )}\r\n      <CardContent className={classes.cardContent}>\r\n        <Typography gutterBottom variant=\"h6\" component=\"h3\" className={classes.hover}>\r\n          {title}\r\n        </Typography>\r\n        <Typography variant=\"body2\" className={classes.hover}>\r\n          {description.substring(0, 100)}\r\n          {description.length > 100 && `...`}\r\n        </Typography>\r\n        <Typography\r\n          variant=\"body2\"\r\n          color=\"textSecondary\"\r\n          className={`${classes.hover} ${classes.instructorName}`}\r\n        >\r\n          <Link color=\"inherit\" href={`/profile/${creatorId}`} target=\"_blank\">\r\n            {creator}\r\n          </Link>\r\n        </Typography>\r\n        <Grid container justify=\"space-between\">\r\n          <Grid item>\r\n            <Typography variant=\"caption\" color=\"textSecondary\">\r\n              <strong>{lastUpdated}</strong>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating rating={rating} totalRating={totalRating} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div className={classes.priceAction}>\r\n              <Typography variant=\"body1\">\r\n                {price === 0 ? <strong>Free</strong> : <strong>&#8377; {price}</strong>}\r\n              </Typography>\r\n              {localStorage.getItem('role') === 'admin' ? (\r\n                <>\r\n                  <Button size=\"small\" color=\"secondary\" variant=\"outlined\">\r\n                    Delete\r\n                  </Button>\r\n                  <Button size=\"small\" color=\"primary\" variant=\"outlined\">\r\n                    Edit\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <Button\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  onClick={() => payment({ type, id })}\r\n                >\r\n                  Enroll\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nCourseCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  creator: PropTypes.string.isRequired,\r\n  lastUpdated: PropTypes.string.isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n  totalRating: PropTypes.number.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n  img: PropTypes.string,\r\n  video: PropTypes.string,\r\n  type: PropTypes.string,\r\n  id: PropTypes.string.isRequired,\r\n  creatorId: PropTypes.string.isRequired,\r\n};\r\n\r\nCourseCard.defaultProps = {\r\n  img: undefined,\r\n  video: undefined,\r\n  type: 'course',\r\n};\r\n\r\nexport default CourseCard;\r\n","/* eslint-disable no-underscore-dangle */\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport CourseCard from './CourseCard';\r\nimport { toDate } from '../assets/functions/util';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sectionTitle: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(1),\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n  viewAllCard: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n  },\r\n  arrowIcon: {\r\n    marginTop: theme.spacing(4),\r\n    display: 'block',\r\n    background: '#cecece',\r\n    padding: theme.spacing(1),\r\n    fontSize: 25,\r\n    borderRadius: '50%',\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n}));\r\n\r\nconst Section = ({ title, data, viewAll, type }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className={classes.sectionContainer}>\r\n      <Typography variant=\"h5\" component=\"h2\" className={classes.sectionTitle}>\r\n        {title}\r\n      </Typography>\r\n      <Grid container spacing={2}>\r\n        {data?.map((d) => (\r\n          <Grid item key={d._id} xs={12} sm={6} md={4} lg={3}>\r\n            <CourseCard\r\n              title={d.name}\r\n              description={d.description}\r\n              lastUpdated={toDate(d.updated)}\r\n              creator={d.creator.name}\r\n              rating={Number(d.totalRating) || 0}\r\n              totalRating={Number(d.totalUser) || 0}\r\n              price={Number(d.price)}\r\n              img={d.img}\r\n              video={d.video}\r\n              id={d._id}\r\n              type={type}\r\n              creatorId={d.creator._id}\r\n            />\r\n          </Grid>\r\n        ))}\r\n        {viewAll && (\r\n          <Grid item xs={12} sm={6} md={4}>\r\n            <Card className={classes.viewAllCard}>\r\n              <ArrowForwardIcon\r\n                className={classes.arrowIcon}\r\n                onClick={() => {\r\n                  history.push(viewAll);\r\n                }}\r\n              />\r\n              <Typography\r\n                variant=\"h6\"\r\n                component=\"h3\"\r\n                className={classes.sectionTitle}\r\n                onClick={() => {\r\n                  history.push(viewAll);\r\n                }}\r\n              >\r\n                View all {title}\r\n              </Typography>\r\n            </Card>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  // eslint-disable-next-line react/forbid-prop-types\r\n  data: PropTypes.array,\r\n  viewAll: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nSection.defaultProps = {\r\n  data: [],\r\n  viewAll: undefined,\r\n};\r\n\r\nexport default Section;\r\n","import { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { setError, setLoading, setSuccess, reset } from '../store/Slices/apiCall';\r\nimport { format } from '../assets/functions/errorFormat';\r\n\r\nexport default () => {\r\n  const [err, setErr] = useState(null);\r\n  const [response, setResponse] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const cb = async (\r\n    url,\r\n    params = {},\r\n    config = {\r\n      headers: {\r\n        authorization: localStorage.getItem('accessToken'),\r\n      },\r\n    }\r\n  ) => {\r\n    dispatch(setLoading());\r\n    try {\r\n      const res = await axios.get(url, { ...config, params });\r\n      setResponse(res.data);\r\n      setErr(null);\r\n      dispatch(setSuccess());\r\n    } catch (error) {\r\n      console.dir(error);\r\n      if (error?.message === 'Network Error' && error.response === undefined) {\r\n        setErr({ error: 'Network Error' });\r\n      }\r\n      if (error?.response?.status === 401) {\r\n        console.log('try');\r\n        try {\r\n          const tokenRes = await axios.post('/auth/generate-access-token', {\r\n            refreshToken: localStorage.getItem('refreshToken'),\r\n          });\r\n          localStorage.setItem('accessToken', tokenRes.data.accessToken);\r\n          setSuccess(null);\r\n          setErr(null);\r\n          dispatch(reset());\r\n          console.log('done');\r\n        } catch (e) {\r\n          console.log('err');\r\n          localStorage.clear();\r\n          history.replace('/unauthorized');\r\n        }\r\n      } else if (error?.response?.status === 422) {\r\n        setErr(format(error?.response?.data?.errors));\r\n      } else if (error?.response?.status === 429) {\r\n        setErr({ error: error?.response?.data });\r\n      }\r\n      setSuccess(null);\r\n      dispatch(setError());\r\n    }\r\n  };\r\n\r\n  return [response, err, cb];\r\n};\r\n","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  loading: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(30),\r\n  },\r\n}));\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.loading}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Section from '../components/Section';\r\nimport useRpay from '../hooks/useRpay';\r\nimport useGet from '../hooks/useGet';\r\nimport Image from '../assets/images/image.svg';\r\nimport CircleSpring from '../components/CircleSpring';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(5, 0, 6),\r\n  },\r\n  image: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  loading: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(30),\r\n  },\r\n}));\r\n\r\nexport default function Album() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [res, err, get] = useGet();\r\n\r\n  useRpay();\r\n\r\n  useEffect(() => {\r\n    get('/pages/home');\r\n  }, []);\r\n\r\n  return (\r\n    <main>\r\n      {/* Hero unit */}\r\n      <div className={classes.heroContent}>\r\n        <Container maxWidth=\"md\">\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h2\"\r\n                align=\"center\"\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n              >\r\n                Courses for you\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <img src={Image} alt=\"hero\" className={classes.image} />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              sm={6}\r\n              className={classes.heroDescription}\r\n              style={{ display: 'flex' }}\r\n            >\r\n              <Typography\r\n                variant=\"h5\"\r\n                align=\"center\"\r\n                color=\"textSecondary\"\r\n                paragraph\r\n                style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                }}\r\n              >\r\n                Never stope learning, We introduce you the courses you need for your success. Are\r\n                you miss your physical class room due to Covid19 we introduce you the digital class\r\n                room with professional teacher support and accomplish your dream goals.\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <div className={classes.heroButtons}>\r\n                <Grid container spacing={2} justify=\"center\">\r\n                  <Grid item>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        window.location.href = '/#explore';\r\n                      }}\r\n                    >\r\n                      Explore the courses\r\n                    </Button>\r\n                  </Grid>\r\n\r\n                  <Grid item>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        if (!localStorage.getItem('role')) history.push('/sign-up');\r\n                        else history.push('/profile/me');\r\n                      }}\r\n                    >\r\n                      {!localStorage.getItem('role') ? `Join to our community now` : `my account`}\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n      {/* End hero unit */}\r\n      {res && (\r\n        <Container className={classes.cardGrid} maxWidth=\"lg\" id=\"explore\">\r\n          <Section\r\n            title=\"Top Courses\"\r\n            data={res?.courses}\r\n            viewAll=\"/view-all/courses\"\r\n            type=\"course\"\r\n          />\r\n          <div style={{ margin: 60 }} />\r\n          <Section title=\"Goals\" data={res?.goals} type=\"goal\" />\r\n          <div style={{ margin: 60 }} />\r\n          <Section\r\n            title=\"Projects\"\r\n            data={res?.projects}\r\n            viewAll=\"/view-all/projects\"\r\n            type=\"project\"\r\n          />\r\n        </Container>\r\n      )}\r\n      {!res && !err && <CircleSpring />}\r\n    </main>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\n\r\nexport default () =>\r\n  useEffect(() => {\r\n    const script = document.createElement('script');\r\n\r\n    script.src = 'https://checkout.razorpay.com/v1/checkout.js';\r\n    script.async = true;\r\n\r\n    document.body.appendChild(script);\r\n\r\n    return () => {\r\n      document.body.removeChild(script);\r\n    };\r\n  }, []);\r\n","import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useSelector } from 'react-redux';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst OtpVerification = ({\r\n  value,\r\n  onChange,\r\n  submitHandler,\r\n  error = false,\r\n  helperText = '',\r\n  err,\r\n}) => {\r\n  const [open, setOpen] = useState(true);\r\n  const [otp, setOtp] = useState(() => value || '');\r\n\r\n  const apiCallState = useSelector((state) => state.apiCall);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (submitHandler !== undefined) {\r\n      submitHandler();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} aria-labelledby=\"form-dialog-title\">\r\n      {apiCallState.loading && <LinearProgress />}\r\n      <DialogTitle id=\"form-dialog-title\">Verify Otp</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>Enter the otp to verify otp is send in your email.</DialogContentText>\r\n        {err && (\r\n          <Typography component=\"body1\" color=\"error\">\r\n            {err}\r\n          </Typography>\r\n        )}\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          type=\"tel\"\r\n          id=\"otp\"\r\n          label=\"OTP\"\r\n          name=\"otp\"\r\n          error={error}\r\n          helperText={helperText}\r\n          value={otp}\r\n          onChange={(e) => {\r\n            setOtp(e.target.value);\r\n            if (onChange) {\r\n              onChange(e.target.value);\r\n            }\r\n          }}\r\n          autoFocus\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\" disabled={apiCallState.loading}>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={onSubmit} color=\"primary\" disabled={apiCallState.loading}>\r\n          Verify\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nOtpVerification.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  submitHandler: PropTypes.func,\r\n  error: PropTypes.bool,\r\n  helperText: PropTypes.string,\r\n  err: PropTypes.string,\r\n};\r\n\r\nOtpVerification.defaultProps = {\r\n  value: undefined,\r\n  onChange: undefined,\r\n  submitHandler: undefined,\r\n  error: false,\r\n  helperText: '',\r\n  err: undefined,\r\n};\r\n\r\nexport default OtpVerification;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport OtpVerification from '../components/OtpVerification';\r\nimport usePost from '../hooks/usePost';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.dark,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [res, err, cb] = usePost();\r\n  const [otp, setOtp] = useState('');\r\n  const [otpRes, otpErr, otpCb] = usePost();\r\n  const [signOutAll, setSignOutAl] = useState(false);\r\n  const [otpDialog, setOtpDialog] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (signOutAll) {\r\n      setSignOutAl(false);\r\n      setOtp('');\r\n      setOtpDialog(false);\r\n    }\r\n    if (!signOutAll && otpRes) {\r\n      const keys = Object.keys(otpRes);\r\n      keys.forEach((key) => {\r\n        localStorage.setItem(key, otpRes[key]);\r\n        setOtpDialog(false);\r\n        history.push('/');\r\n      });\r\n    }\r\n  }, [otpRes, history]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    cb('/auth/sign-in', { email });\r\n    setOtpDialog(true);\r\n  };\r\n\r\n  const signOutAllHandler = () => {\r\n    cb('/auth/sign-out-all', { email });\r\n    setSignOutAl(true);\r\n    setOtpDialog(true);\r\n  };\r\n\r\n  const register = () => {\r\n    if (signOutAll) otpCb('/auth/sign-out-all-otp-verify', { token: res.token, otp });\r\n    else otpCb('/auth/sign-in-otp-verify', { token: res.token, otp });\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        {!!err?.error && (\r\n          <Typography variant=\"body1\" color=\"error\">\r\n            {err?.error}\r\n          </Typography>\r\n        )}\r\n        <form className={classes.form} noValidate={false} onSubmit={submitHandler}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            type=\"email\"\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            error={!!err?.email}\r\n            helperText={err?.email}\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            autoFocus\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          {err?.email === 'You can access your account from maximum 3 device!' && (\r\n            <Button\r\n              onClick={signOutAllHandler}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign Out all\r\n            </Button>\r\n          )}\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/sign-up\" className={classes.link}>\r\n                Don&apos;t have an account? Sign Up\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        {res && otpDialog && (\r\n          <OtpVerification\r\n            value={otp}\r\n            onChange={setOtp}\r\n            error={!!otpErr?.otp}\r\n            helperText={otpErr?.otp}\r\n            submitHandler={register}\r\n            err={otpErr?.error}\r\n          />\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Container from '@material-ui/core/Container';\r\nimport usePost from '../hooks/usePost';\r\nimport OtpVerification from '../components/OtpVerification';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.dark,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [state, setState] = useState({ name: '', email: '' });\r\n  const [otp, setOtp] = useState('');\r\n  const [res, err, cb] = usePost();\r\n  const [otpRes, otpErr, otpCb] = usePost();\r\n\r\n  const changeState = (name) => (event) => {\r\n    setState({ ...state, [name]: event.target.value });\r\n  };\r\n\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    cb('/auth/sign-up', { email: state.email, name: state.name });\r\n  };\r\n\r\n  const register = async () => {\r\n    otpCb('/auth/sign-up-otp-verify', { token: res.token, otp });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (otpRes) {\r\n      const keys = Object.keys(otpRes);\r\n      keys.forEach((key) => {\r\n        localStorage.setItem(key, otpRes[key]);\r\n        history.push('/');\r\n      });\r\n    }\r\n  }, [otpRes, history]);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        {!!err?.error && (\r\n          <Typography variant=\"body1\" color=\"error\">\r\n            {err?.error}\r\n          </Typography>\r\n        )}\r\n        <form className={classes.form} noValidate={false} onSubmit={submitHandler}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"name\"\r\n                name=\"name\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                autoFocus\r\n                value={state.name}\r\n                onChange={changeState('name')}\r\n                error={!!err?.name}\r\n                helperText={err?.name}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                type=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={state.email}\r\n                onChange={changeState('email')}\r\n                error={!!err?.email}\r\n                helperText={err?.email}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/sign-in\" className={classes.link}>\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        {res && (\r\n          <OtpVerification\r\n            value={otp}\r\n            onChange={setOtp}\r\n            error={!!otpErr?.otp}\r\n            helperText={otpErr?.otp}\r\n            submitHandler={register}\r\n            err={otpErr?.error}\r\n          />\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  heroContent: {\r\n    padding: theme.spacing(10, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  return (\r\n    <div className={classes.heroContent}>\r\n      <Container maxWidth=\"md\">\r\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n          Oops! page not found!\r\n        </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n          The page you are searching for is not found :(\r\n        </Typography>\r\n        <div className={classes.heroButtons}>\r\n          <Grid container spacing={2} justify=\"center\">\r\n            <Grid item>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={() => history.push('/')}>\r\n                Back to Home\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={() => history.goBack()}>\r\n                Back to previous page\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from 'react-router-dom';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  heroContent: {\r\n    padding: theme.spacing(10, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  lockIcon: {\r\n    fontSize: '2.5rem',\r\n  },\r\n}));\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  return (\r\n    <div className={classes.heroContent}>\r\n      <Container maxWidth=\"md\">\r\n        <Typography component=\"h1\" color=\"error\" variant=\"h2\" align=\"center\" gutterBottom>\r\n          Unauthorized <LockOutlinedIcon className={classes.lockIcon} color=\"error\" />\r\n        </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n          You are not authorized to access the resource\r\n        </Typography>\r\n        <div className={classes.heroButtons}>\r\n          <Grid container spacing={2} justify=\"center\">\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => history.replace('/sign-in')}\r\n              >\r\n                Sign In\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={() => history.replace('/')}>\r\n                Back to Home\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(2, 4),\r\n  },\r\n  mainFooter: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n}));\r\n\r\nexport default function Footer() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Divider />\r\n      <footer className={classes.footer}>\r\n        <div className={classes.mainFooter}>\r\n          <Typography variant=\"subtitle1\" align=\"left\" color=\"textSecondary\" component=\"p\">\r\n            Courses\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" align=\"right\" color=\"textSecondary\" component=\"p\">\r\n            © {new Date().getFullYear()} Courses\r\n          </Typography>\r\n        </div>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n          Design & Developed by{' '}\r\n          <Link color=\"inherit\" href=\"https://meghoshpritam.netlify.app/\" target=\"_blank\">\r\n            meghoshpritam\r\n          </Link>\r\n        </Typography>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport style from './ContentListItem.module.scss';\r\n\r\nexport default function ContentListItem({ title, description, type, time }) {\r\n  return (\r\n    <div className={style.container}>\r\n      <div>{title}</div>\r\n      <div>\r\n        <PlayCircleFilledIcon color=\"primary\" />\r\n      </div>\r\n      <div>{description}</div>\r\n      <div>{time}</div>\r\n      <div>{type}</div>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-underscore-dangle */\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport Link from '@material-ui/core/Link';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ReactPlayer from 'react-player';\r\nimport ContentListItem from '../components/ContentListItem';\r\nimport useGet from '../hooks/useGet';\r\nimport CircleSpring from '../components/CircleSpring';\r\nimport { toDate } from '../assets/functions/util';\r\nimport Rating from '../components/Rating';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  img: { width: '100%' },\r\n  starIcon: {\r\n    fontSize: 18,\r\n    color: '#ffc400',\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  contentItem: {\r\n    margin: theme.spacing(1, 0),\r\n    padding: theme.spacing(1.3, 1),\r\n    background: '#cecece',\r\n  },\r\n  videoList: {\r\n    margin: theme.spacing(0.7, 0, 0.7, 4),\r\n    padding: theme.spacing(1.5),\r\n    background: '#f5f5f5',\r\n  },\r\n  heading: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n  description: {\r\n    marginBottom: theme.spacing(1.5),\r\n  },\r\n  creatorDetails: {\r\n    margin: theme.spacing(1, 0, 2, 0),\r\n  },\r\n  detailsSection: {\r\n    margin: theme.spacing(1.6, 0),\r\n  },\r\n  secondaryText: {\r\n    opacity: 0.75,\r\n  },\r\n  list: {\r\n    margin: theme.spacing(0.5, 0),\r\n    padding: theme.spacing(1),\r\n    backgroundColor: '#eeeeee',\r\n  },\r\n}));\r\n\r\nexport default () => {\r\n  const { id, type } = useParams();\r\n  const classes = useStyles();\r\n\r\n  const [res, err, get] = useGet();\r\n\r\n  const arr = [0, 1, 2, 3, 4, 5, 6];\r\n\r\n  const [expandContent, setExpandContent] = React.useState([...arr.map((n) => false)]);\r\n\r\n  const handleExpandClick = (num) => {\r\n    setExpandContent([...expandContent.map((val, idx) => (idx === num ? !val : val))]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    get(`/${type}`, { id });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('res...', res);\r\n  }, [res]);\r\n\r\n  const lists = [\r\n    {\r\n      title: 'Introduction',\r\n      numberOfContent: 4,\r\n      totalTime: '01:45:49',\r\n      contents: [\r\n        {\r\n          name: 'Recap of C',\r\n          description: 'Recap of C lecture 01',\r\n          type: 'video',\r\n          time: '17:59',\r\n          video:\r\n            'https://www.youtube.com/watch?v=KG4hjVDw-p8&list=PLmp4ylk-B4KrM9uOEdvPIVFUkU3jNc6D2&index=2',\r\n        },\r\n        {\r\n          name: 'Recap of C',\r\n          description: 'Recap of C lecture 02',\r\n          type: 'video',\r\n          time: '30:05',\r\n          video:\r\n            'https://www.youtube.com/watch?v=KG4hjVDw-p8&list=PLmp4ylk-B4KrM9uOEdvPIVFUkU3jNc6D2&index=2',\r\n        },\r\n        {\r\n          name: 'Recap of C',\r\n          description: 'Recap of C lecture 03',\r\n          type: 'video',\r\n          time: '29:49',\r\n          video:\r\n            'https://www.youtube.com/watch?v=KG4hjVDw-p8&list=PLmp4ylk-B4KrM9uOEdvPIVFUkU3jNc6D2&index=2',\r\n        },\r\n        {\r\n          name: 'Programs with IO and Loop',\r\n          description: 'Loops (for, while, do-while) and I/O in C++',\r\n          type: 'video',\r\n          time: '27:56',\r\n          video:\r\n            'https://www.youtube.com/watch?v=KG4hjVDw-p8&list=PLmp4ylk-B4KrM9uOEdvPIVFUkU3jNc6D2&index=2',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: 'Structure of C++',\r\n      numberOfContent: 3,\r\n      totalTime: '01:12:05',\r\n      contents: [],\r\n    },\r\n    {\r\n      title: 'Functions in C++',\r\n      numberOfContent: 6,\r\n      totalTime: '02:14:40',\r\n      contents: [],\r\n    },\r\n    {\r\n      title: 'OOP - Classes and Objects',\r\n      numberOfContent: 7,\r\n      totalTime: '04:24:19',\r\n      contents: [],\r\n    },\r\n    {\r\n      title: 'operator Overloading',\r\n      numberOfContent: 6,\r\n      totalTime: '02:59:20',\r\n      contents: [],\r\n    },\r\n    {\r\n      title: 'Inheritance',\r\n      numberOfContent: 4,\r\n      totalTime: '03:12:30',\r\n      contents: [],\r\n    },\r\n    {\r\n      title: 'Polymorphism',\r\n      numberOfContent: 6,\r\n      totalTime: '04:20:05',\r\n      contents: [],\r\n    },\r\n    {\r\n      title: 'Smart pointer',\r\n      numberOfContent: 3,\r\n      totalTime: '01:02:06',\r\n      contents: [],\r\n    },\r\n    {\r\n      title: 'Exception Handling',\r\n      numberOfContent: 8,\r\n      totalTime: '03:48:24',\r\n      contents: [],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Container\r\n      maxWidth=\"md\"\r\n      // style={{ background: 'red' }}\r\n    >\r\n      {res ? (\r\n        <Grid container>\r\n          {/* TODO: change the name of the video or image and show the selected one */}\r\n          <Grid item xs={12}>\r\n            {res.course.video ? (\r\n              <ReactPlayer url=\"https://www.youtube.com/watch?v=KG4hjVDw-p8&list=PLmp4ylk-B4KrM9uOEdvPIVFUkU3jNc6D2&index=2\" />\r\n            ) : (\r\n              <img src={res.course.img} alt=\"img...\" className={classes.img} />\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography component=\"h1\" variant=\"h5\" className={classes.heading}>\r\n              {res?.course?.name}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"body1\" color=\"textSecondary\" className={classes.description}>\r\n              {res?.course?.description}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid container spacing={2} justify=\"space-between\">\r\n            <Grid item>\r\n              Created by {/* eslint-disable-next-line no-underscore-dangle */}\r\n              <Link href={`/profile/${res?.course?.creator?._id}`}>\r\n                <strong>{res?.course?.creator?.name}</strong>\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              Last Updated <strong>{toDate(res?.course?.updated)}</strong>\r\n            </Grid>\r\n            <Grid item>\r\n              <Rating rating={0} totalRating={0} fontSize={19} />\r\n            </Grid>\r\n            {/* TODO: fetch the views from youtube api if video available */}\r\n            <Grid item>\r\n              <span className={classes.secondaryText}>\r\n                <strong>9</strong> views\r\n              </span>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.detailsSection}>\r\n            {res?.course?.weWillCover?.length !== 0 && (\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <Typography component=\"h2\" variant=\"h6\" color=\"primary\">\r\n                    We will cover\r\n                  </Typography>\r\n                </Grid>\r\n                {res?.course?.weWillCover.map((cover) => (\r\n                  <Grid item xs={12} sm={6} key={cover}>\r\n                    <Grid container justify=\"center\">\r\n                      <Grid item xs={1}>\r\n                        <CheckCircleIcon color=\"primary\" />\r\n                      </Grid>\r\n                      <Grid item xs={11} style={{ paddingLeft: 1 }}>\r\n                        <Typography variant=\"body1\">{cover}</Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n          {/* TODO: check the course content and list accordingly if paid then lock icon, video play icon, assignment, examination icon, quiz icon */}\r\n          <Grid item xs={12} className={classes.detailsSection}>\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                <Typography component=\"h2\" variant=\"h6\" color=\"primary\">\r\n                  Course content\r\n                </Typography>\r\n              </Grid>\r\n              {lists.map((a, idx) => (\r\n                <Grid item xs={12} key={a.title} className={classes.list}>\r\n                  <Grid container justify=\"space-between\">\r\n                    <Grid item onClick={() => handleExpandClick(idx)}>\r\n                      <Grid container spacing={1}>\r\n                        <Grid item>\r\n                          <InboxIcon color=\"secondary\" />\r\n                        </Grid>\r\n                        <Grid item>{a.title}</Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <strong>{a.totalTime}</strong>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item onClick={() => handleExpandClick(idx)}>\r\n                    <Grid container justify=\"space-between\">\r\n                      <Grid item>\r\n                        <Grid container spacing={1}>\r\n                          <Grid item>\r\n                            {expandContent[a] ? (\r\n                              <RemoveIcon color=\"secondary\" />\r\n                            ) : (\r\n                              <AddIcon color=\"primary\" />\r\n                            )}\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <span className={classes.secondaryText}>view content</span>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <strong>{a.numberOfContent}</strong> contain\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Collapse in={expandContent[idx]} timeout=\"auto\" unmountOnExit>\r\n                    {a?.contents.map((content) => (\r\n                      <Grid item key={content?.title} className={classes.videoList}>\r\n                        <ContentListItem\r\n                          title={content.name}\r\n                          description={content.description}\r\n                          type={content.type}\r\n                          time={content.time}\r\n                        />\r\n                      </Grid>\r\n                    ))}\r\n                  </Collapse>\r\n                </Grid>\r\n              ))}\r\n              {/* {arr.map((a) => (\r\n                <Grid item xs={12} key={a} className={classes.list}>\r\n                  <Grid container justify=\"space-between\">\r\n                    <Grid item onClick={() => handleExpandClick(a)}>\r\n                      <Grid container spacing={1}>\r\n                        <Grid item>\r\n                          <InboxIcon color=\"secondary\" />\r\n                        </Grid>\r\n                        <Grid item>111</Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <strong>12:17</strong>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item onClick={() => handleExpandClick(a)}>\r\n                    <Grid container justify=\"space-between\">\r\n                      <Grid item>\r\n                        <Grid container spacing={1}>\r\n                          <Grid item>\r\n                            {expandContent[a] ? (\r\n                              <RemoveIcon color=\"secondary\" />\r\n                            ) : (\r\n                              <AddIcon color=\"primary\" />\r\n                            )}\r\n                          </Grid>\r\n                          <Grid item>\r\n                            <span className={classes.secondaryText}>\r\n                              Lorem ipsum dolor sit amet.\r\n                            </span>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <strong>6</strong> contain\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Collapse in={expandContent[a]} timeout=\"auto\" unmountOnExit>\r\n                    {arr.map((a1) => (\r\n                      <Grid item key={a1} className={classes.videoList}>\r\n                        <ContentListItem />\r\n                      </Grid>\r\n                    ))}\r\n                  </Collapse>\r\n                </Grid>\r\n              ))} */}\r\n            </Grid>\r\n          </Grid>\r\n          {res?.course?.requirements?.length !== 0 && (\r\n            <Grid item xs={12} className={classes.detailsSection}>\r\n              <Grid item xs={12}>\r\n                <Typography component=\"h2\" variant=\"h6\" color=\"primary\">\r\n                  Requirements\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Grid container grid spacing={2}>\r\n                  {res?.course?.requirements?.map((requirement) => (\r\n                    <Grid item xs={12} key={requirement} style={{ marginLeft: 10 }}>\r\n                      {requirement}\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          {res?.course?.courseFor?.length !== 0 && (\r\n            <Grid item xs={12} className={classes.detailsSection}>\r\n              <Grid item xs={12}>\r\n                <Typography component=\"h2\" variant=\"h6\" color=\"primary\">\r\n                  The course for\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Grid container grid spacing={2}>\r\n                  {res?.course?.courseFor?.map((cFor) => (\r\n                    <Grid item xs={12} key={cFor} style={{ marginLeft: 10 }}>\r\n                      {cFor}\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n          {res?.course?.resources?.length !== 0 && (\r\n            <Grid item xs={12} className={classes.detailsSection}>\r\n              <Grid item xs={12}>\r\n                <Typography component=\"h2\" variant=\"h6\" color=\"primary\">\r\n                  Resources\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Grid container grid spacing={2}>\r\n                  {res?.course?.resources?.map((resource) => (\r\n                    <Grid item xs={12} key={resource._id} style={{ marginLeft: 10 }}>\r\n                      <Link href={resource.uri}>{resource.name}</Link>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      ) : (\r\n        <CircleSpring />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useParams } from 'react-router-dom';\r\nimport Section from '../components/Section';\r\nimport useGet from '../hooks/useGet';\r\nimport CircleSpring from '../components/CircleSpring';\r\nconst useStyles = makeStyles((theme) => ({\r\n  details: {\r\n    textAlign: 'center',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  img: {\r\n    borderRadius: '50%',\r\n    height: 200,\r\n    width: 200,\r\n    color: 'red',\r\n  },\r\n  customAvatar: {\r\n    fontSize: '4rem',\r\n    background: 'purple',\r\n    height: 190,\r\n    width: 190,\r\n    borderRadius: '50%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n  const [res, err, get] = useGet();\r\n\r\n  useEffect(() => {\r\n    get('/profile', { id: id === 'me' ? localStorage.getItem('_id') : id });\r\n  }, []);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Container maxWidth=\"md\" style={{ marginTop: 80 }}>\r\n        {res && (\r\n          <Grid container className={classes.details}>\r\n            <Grid item xs={12} sm={5}>\r\n              {console.log('res', res)}\r\n              {res.avatar ? (\r\n                <img src={res.avatar} alt=\"profile_image\" className={classes.img} />\r\n              ) : (\r\n                <div className={classes.customAvatar}>\r\n                  <div>\r\n                    {`${localStorage.getItem('name')[0]}${\r\n                      localStorage.getItem('name').split(' ')[\r\n                        localStorage.getItem('name').split(' ').length - 1\r\n                      ][0]\r\n                    }`}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={12} sm={7}>\r\n              <Typography variant=\"h4\" component=\"h1\">\r\n                {localStorage.getItem('name')}\r\n              </Typography>\r\n              <Typography variant=\"h6\" component=\"h2\" color=\"textSecondary\">\r\n                &bull; {localStorage.getItem('role')} &bull;\r\n              </Typography>\r\n              <Typography variant=\"h6\" component=\"h3\">\r\n                {res.join}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                variant=\"body1\"\r\n                component=\"body\"\r\n                style={{ textAlign: 'left', marginTop: 13 }}\r\n              >\r\n                <strong style={{ fontSize: '1.3rem' }}>About </strong>\r\n                {res.about}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n        {!res && !err && <CircleSpring />}\r\n        {err && (\r\n          <Typography variant=\"h6\" component=\"h2\" color=\"error\">\r\n            An error occurs\r\n          </Typography>\r\n        )}\r\n      </Container>\r\n      {res && <Section title=\"My Courses\" type=\"course\" />}\r\n    </Container>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    color: theme.palette.primary.dark,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  mainAbout: {\r\n    margin: theme.spacing(3, 0),\r\n  },\r\n}));\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Container maxWidth=\"sm\" style={{ textAlign: 'center', marginTop: 80, marginBottom: 15 }}>\r\n        <Typography component=\"h1\" variant=\"h2\">\r\n          About Us\r\n        </Typography>\r\n        <Typography paragraph variant=\"body1\" className={classes.mainAbout}>\r\n          <strong>L</strong>earn more to do more, with the best resources we teach you from start to\r\n          finish for in-depth knowledge about a subject. No more doubt, we provide live teacher\r\n          support for clear your doubts. Quick ways, tips and tricks are the part of out teaching.\r\n        </Typography>\r\n      </Container>\r\n      <Typography paragraph variant=\"body2\">\r\n        <strong>A</strong>ll the people of our community including teacher, student, guides,\r\n        technical support teams are the part of our journey, We going towards a brighter future for\r\n        everyone. The world is continuously changing and update our courses accordingly, We teach\r\n        you the on-demand courses to achieve your goals. You will be an expert from the beginner.\r\n        Not too many courses and teachers to confuse you, we provide the best to you and save lots\r\n        of times by not to searching for a full and understandable course. The one platform for all\r\n        your education need. To start learning to{' '}\r\n        <Link to=\"/#explore\" className={classes.link}>\r\n          explore our courses\r\n        </Link>{' '}\r\n        or join us{' '}\r\n        <Link to=\"/sign-up\" className={classes.link}>\r\n          join us\r\n        </Link>{' '}\r\n        now to be a part of our community.\r\n      </Typography>\r\n    </Container>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useParams } from 'react-router-dom';\r\nimport Section from '../components/Section';\r\n\r\nexport default () => {\r\n  const { type } = useParams();\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      {type === 'courses' && <Section title=\"All Courses\" cards={[1, 2, 3, 4, 5, 6, 7, 8]} />}\r\n      {type === 'projects' && <Section title=\"All Projects\" cards={[1, 2, 3, 4, 5, 6, 7, 8]} />}\r\n    </Container>\r\n  );\r\n};\r\n","/* eslint-disable no-unused-expressions */\r\nimport React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst FileUpload = ({ type }) => {\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h5\" component=\"h2\" align=\"center\">\r\n          Add {type}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Box p={2}>\r\n          <DropzoneArea\r\n            acceptedFiles={(() => {\r\n              switch (type) {\r\n                case 'image':\r\n                  return ['image/*'];\r\n                case 'video':\r\n                  return ['video/*'];\r\n                default:\r\n                  return ['*'];\r\n              }\r\n            })()}\r\n            filesLimit={1}\r\n            dropzoneText={`Drag and drop an ${type} here or click`}\r\n            onChange={(files) => console.log('Files:', files)}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Button variant=\"outlined\" fullWidth>\r\n          Upload {type}\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nFileUpload.propTypes = { type: PropTypes.string.isRequired };\r\n\r\nFileUpload.defaultProps = {};\r\n\r\nexport default FileUpload;\r\n","import React, { useState } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n// import FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport { Button } from '@material-ui/core';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport FileUpload from '../components/FileUpload';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // heroContent: {\r\n  //   backgroundColor: theme.palette.background.paper,\r\n  //   padding: theme.spacing(8, 0, 6),\r\n  // },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: '100%',\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(2, 1),\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nexport default function AddItem() {\r\n  const classes = useStyles();\r\n  const types = ['Node', 'Course', 'Goal', 'Project'];\r\n  const [type, setType] = useState('node');\r\n  const [state, setState] = useState({ name: '', description: '', img: '', video: '' });\r\n  const [contentUpload, setContentUpload] = useState({\r\n    image: '',\r\n    imgBtn: false,\r\n    video: '',\r\n    videoImg: false,\r\n  });\r\n  const stateHandler = (name) => (event) => {\r\n    setState({ ...state, [name]: event.target.value });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  // const state = useState\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\">\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n            Add new\r\n          </Typography>\r\n        </Grid>\r\n        {/* <form> */}\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"type-label\">Select Type</InputLabel>\r\n            <Select\r\n              labelId=\"type-label\"\r\n              id=\"type\"\r\n              value={type}\r\n              onChange={(event) => setType(event.target.value)}\r\n              fullWidth\r\n              label=\"Select Type\"\r\n            >\r\n              {types.map((t) => (\r\n                <MenuItem value={t.toLowerCase()}>{t}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            variant=\"outlined\"\r\n            required\r\n            fullWidth\r\n            value={state.name}\r\n            onChange={stateHandler('name')}\r\n            className={classes.formControl}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            required\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={state.name}\r\n            onChange={stateHandler('description')}\r\n            className={classes.formControl}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl className={classes.formControl} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"image\">Image Link</InputLabel>\r\n            <OutlinedInput\r\n              id=\"image\"\r\n              value={state.img}\r\n              onChange={stateHandler('img')}\r\n              endAdornment={\r\n                // eslint-disable-next-line react/jsx-wrap-multilines\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle image upload visibility\"\r\n                    onClick={() =>\r\n                      setContentUpload({ ...contentUpload, imgBtn: !contentUpload.imgBtn })\r\n                    }\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {contentUpload.imgBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={85}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Collapse in={contentUpload.imgBtn} timeout=\"auto\" unmountOnExit>\r\n          <Grid item xs={12} sm={6}>\r\n            <FileUpload />\r\n          </Grid>\r\n        </Collapse>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl className={classes.formControl} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"video\">Video Link</InputLabel>\r\n            <OutlinedInput\r\n              id=\"video\"\r\n              value={state.video}\r\n              onChange={stateHandler('video')}\r\n              endAdornment={\r\n                // eslint-disable-next-line react/jsx-wrap-multilines\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle video upload visibility\"\r\n                    onClick={() =>\r\n                      setContentUpload({ ...contentUpload, videoBtn: !contentUpload.videoBtn })\r\n                    }\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {contentUpload.videoBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={85}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Collapse in={contentUpload.videoBtn} timeout=\"auto\" unmountOnExit>\r\n          <Grid item xs={12} sm={6}>\r\n            <FileUpload />\r\n          </Grid>\r\n        </Collapse>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl className={classes.formControl} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"markdown\">Detail Description Link</InputLabel>\r\n            <OutlinedInput\r\n              id=\"markdown\"\r\n              value={state.markdown}\r\n              onChange={stateHandler('video')}\r\n              endAdornment={\r\n                // eslint-disable-next-line react/jsx-wrap-multilines\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle video upload visibility\"\r\n                    onClick={() => {\r\n                      // setContentUpload({ ...contentUpload, videoBtn: !contentUpload.videoBtn })\r\n                    }}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    <EditIcon />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={165}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"resources-name\"\r\n            label=\"Resources Name\"\r\n            variant=\"outlined\"\r\n            // value={state.resources}\r\n            // onChange={stateHandler('resources')}\r\n            className={classes.formControl}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={10} sm={5}>\r\n          <FormControl className={classes.formControl} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"resource-link\">Resource Link</InputLabel>\r\n            <OutlinedInput\r\n              id=\"resource-link\"\r\n              value={state.video}\r\n              onChange={stateHandler('resourceLink')}\r\n              endAdornment={\r\n                // eslint-disable-next-line react/jsx-wrap-multilines\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle video upload visibility\"\r\n                    onClick={() =>\r\n                      setContentUpload({\r\n                        ...contentUpload,\r\n                        resourceBtn: !contentUpload.resourceBtn,\r\n                      })\r\n                    }\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={105}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          md={1}\r\n          style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}\r\n        >\r\n          <IconButton>\r\n            <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n          </IconButton>\r\n        </Grid>\r\n        <Collapse in={contentUpload.resourceBtn} timeout=\"auto\" unmountOnExit>\r\n          <Grid item xs={10} sm={6}>\r\n            <FileUpload />\r\n          </Grid>\r\n        </Collapse>\r\n        {/* <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"resources-link\"\r\n            label=\"Resources Link\"\r\n            variant=\"outlined\"\r\n            // value={state.resources}\r\n            // onChange={stateHandler('resources')}\r\n            className={classes.formControl}\r\n          />\r\n        </Grid> */}\r\n\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl className={classes.formControl} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"quiz\">Quiz Link</InputLabel>\r\n            <OutlinedInput\r\n              id=\"quiz\"\r\n              value={state.exam}\r\n              onChange={stateHandler('video')}\r\n              endAdornment={\r\n                // eslint-disable-next-line react/jsx-wrap-multilines\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle video upload visibility\"\r\n                    onClick={() => {\r\n                      // setContentUpload({ ...contentUpload, videoBtn: !contentUpload.videoBtn })\r\n                    }}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    <LaunchIcon />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={70}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl className={classes.formControl} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"exam\">Exam Link</InputLabel>\r\n            <OutlinedInput\r\n              id=\"exam\"\r\n              value={state.exam}\r\n              onChange={stateHandler('video')}\r\n              endAdornment={\r\n                // eslint-disable-next-line react/jsx-wrap-multilines\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle video upload visibility\"\r\n                    onClick={() => {\r\n                      // setContentUpload({ ...contentUpload, videoBtn: !contentUpload.videoBtn })\r\n                    }}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    <LaunchIcon />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={80}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"assignment\"\r\n            label=\"Assignment Link\"\r\n            variant=\"outlined\"\r\n            value={state.assignment}\r\n            onChange={stateHandler('assignment')}\r\n            className={classes.formControl}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Button color=\"primary\" variant=\"contained\" className={classes.submit} fullWidth>\r\n            Add a new Node\r\n          </Button>\r\n        </Grid>\r\n        {/* </form> */}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    color: theme.palette.primary.dark,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  mainAbout: {\r\n    margin: theme.spacing(3, 0),\r\n  },\r\n  leftMargin1st: {\r\n    marginLeft: 10,\r\n  },\r\n  leftMargin2nd: {\r\n    marginLeft: 20,\r\n  },\r\n}));\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Container maxWidth=\"sm\" style={{ textAlign: 'center', marginTop: 80, marginBottom: 15 }}>\r\n        <Typography component=\"h1\" variant=\"h2\">\r\n          Need Help!\r\n        </Typography>\r\n        <Typography paragraph variant=\"body1\" className={classes.mainAbout}>\r\n          We are always with you don&apos;t worry be happy :)\r\n        </Typography>\r\n      </Container>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          How Can i help ypu\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.leftMargin1st}>\r\n          Account Related problem?\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.leftMargin1st}>\r\n          Payment related issues?\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.leftMargin1st}>\r\n          Course related issue?\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.leftMargin2nd}>\r\n          Class us on\r\n          <Typography color=\"primary\" display=\"inline\">\r\n            {' '}\r\n            9876543210{' '}\r\n          </Typography>\r\n          form 10:00am to 10:00pm\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.leftMargin1st} style={{ marginTop: 5 }}>\r\n          Any problem in the website\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.leftMargin2nd}>\r\n          Report to <Link href=\"http://meghoshpritam.netlify.app\">meghoshpritam</Link>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport SunEditor, { buttonList } from 'suneditor-react';\r\nimport 'suneditor/dist/css/suneditor.min.css';\r\n\r\nexport default () => {\r\n  return (\r\n    <SunEditor\r\n      setOptions={{\r\n        height: '90vh',\r\n        buttonList: buttonList.complex,\r\n        callBackSave: (e) => {\r\n          console.log('.cakk', e);\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React from 'react';\r\nimport MarkdownEditor from '../components/MarkdownEditor';\r\n\r\nexport default () => {\r\n  return <MarkdownEditor />;\r\n};\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initStage = {\r\n  id: '',\r\n  name: '',\r\n  description: '',\r\n  img: '',\r\n  video: '',\r\n  markdown: '',\r\n  resources: [],\r\n  quiz: '',\r\n  exam: '',\r\n  assignment: '',\r\n  type: 'free',\r\n};\r\n\r\nexport const nodeSlice = createSlice({\r\n  name: 'node',\r\n  initialState: {\r\n    ...initStage,\r\n  },\r\n  reducers: {\r\n    setNode: (state, action) => {\r\n      state.name = action.payload.name;\r\n      state.description = action.payload.description;\r\n      state.img = action.payload.img;\r\n      state.video = action.payload.video;\r\n      state.markdown = action.payload.markdown;\r\n      state.resources = action.payload.resources || [];\r\n      state.quiz = action.payload.quiz;\r\n      state.exam = action.payload.exam;\r\n      state.assignment = action.payload.assignment;\r\n      state.type = action.payload.type;\r\n      state.id = action.payload.id;\r\n    },\r\n    setName: (state, action) => {\r\n      state.name = action.payload;\r\n    },\r\n    setDescription: (state, action) => {\r\n      state.description = action.payload;\r\n    },\r\n    setImg: (state, action) => {\r\n      state.img = action.payload;\r\n    },\r\n    setVideo: (state, action) => {\r\n      state.video = action.payload;\r\n    },\r\n    setMarkdown: (state, action) => {\r\n      state.markdown = action.payload;\r\n    },\r\n    setExam: (state, action) => {\r\n      state.exam = action.payload;\r\n    },\r\n    setQuiz: (state, action) => {\r\n      state.quiz = action.payload;\r\n    },\r\n    setAssignment: (state, action) => {\r\n      state.assignment = action.payload;\r\n    },\r\n    setType: (state, action) => {\r\n      state.type = action.payload;\r\n    },\r\n    addResource: (state, action) => {\r\n      state.resources.push({\r\n        name: action.payload.name,\r\n        uri: action.payload.uri,\r\n        id: new Date().toString(),\r\n      });\r\n    },\r\n    deleteResource: (state, action) => {\r\n      state.resources = [...state.resources.filter((res) => res.id !== action.payload.id)];\r\n    },\r\n    updateResource: (state, action) => {\r\n      state.resources = [\r\n        ...state.resources.map((res) =>\r\n          res.id === action.payload.id\r\n            ? { name: action.payload.name, uri: action.payload.uri, id: action.payload.id }\r\n            : res\r\n        ),\r\n      ];\r\n    },\r\n    reset: (state) => {\r\n      const keys = Object.keys(initStage);\r\n      keys.forEach((key) => {\r\n        state[key] = initStage[key];\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setName,\r\n  setDescription,\r\n  setAssignment,\r\n  setExam,\r\n  setQuiz,\r\n  setMarkdown,\r\n  setVideo,\r\n  setImg,\r\n  setType,\r\n  addResource,\r\n  updateResource,\r\n  deleteResource,\r\n  reset,\r\n  setNode,\r\n} = nodeSlice.actions;\r\n\r\nexport const selectNode = (state) => state.ApiCall;\r\n\r\nexport default nodeSlice.reducer;\r\n","import { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { setError, setLoading, setSuccess, reset } from '../store/Slices/apiCall';\r\nimport { format } from '../assets/functions/errorFormat';\r\n\r\nconst handleError = async (error, dispatch, setErr, history) => {\r\n  console.dir(error);\r\n  if (error?.message === 'Network Error' && error.response === undefined) {\r\n    setErr({ error: 'Network Error' });\r\n  }\r\n  if (error?.response?.status === 401) {\r\n    try {\r\n      const tokenRes = await axios.post('/auth/generate-access-token', {\r\n        refreshToken: localStorage.getItem('refreshToken'),\r\n      });\r\n      localStorage.setItem('accessToken', tokenRes.data.accessToken);\r\n      setSuccess(null);\r\n      setErr(null);\r\n      dispatch(reset());\r\n    } catch (e) {\r\n      localStorage.clear();\r\n      history.replace('/unauthorized');\r\n    }\r\n  } else if (error?.response?.status === 422) {\r\n    setErr(format(error?.response?.data?.errors));\r\n    setSuccess(null);\r\n    dispatch(setError());\r\n  } else if (error?.response?.status === 429) {\r\n    setErr({ error: error?.response?.data });\r\n    setSuccess(null);\r\n    dispatch(setError());\r\n  } else {\r\n    setSuccess(null);\r\n    dispatch(setError());\r\n  }\r\n};\r\n\r\nexport const useGet = () => {\r\n  const [err, setErr] = useState(null);\r\n  const [response, setResponse] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const cb = async (\r\n    url,\r\n    params = {},\r\n    config = {\r\n      headers: {\r\n        authorization: localStorage.getItem('accessToken'),\r\n      },\r\n    }\r\n  ) => {\r\n    dispatch(setLoading());\r\n    try {\r\n      const res = await axios.get(url, { ...config, params });\r\n      setResponse(res.data);\r\n      setErr(null);\r\n      dispatch(setSuccess());\r\n    } catch (error) {\r\n      handleError(error, dispatch, setErr, history);\r\n    }\r\n  };\r\n\r\n  return [response, err, cb];\r\n};\r\n\r\nexport const usePost = () => {\r\n  const [err, setErr] = useState(null);\r\n  const [response, setResponse] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const cb = async (\r\n    url,\r\n    data,\r\n    config = {\r\n      headers: {\r\n        authorization: localStorage.getItem('accessToken'),\r\n      },\r\n    }\r\n  ) => {\r\n    dispatch(setLoading());\r\n    try {\r\n      const res = await axios.post(url, data, config);\r\n      setResponse(res.data);\r\n      setErr(null);\r\n      dispatch(setSuccess());\r\n    } catch (error) {\r\n      handleError(error, dispatch, setErr, history);\r\n    }\r\n  };\r\n\r\n  return [response, err, cb];\r\n};\r\n\r\nexport const useDelete = () => {\r\n  const [err, setErr] = useState(null);\r\n  const [response, setResponse] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const cb = async (\r\n    url,\r\n    params = {},\r\n    config = {\r\n      headers: {\r\n        authorization: localStorage.getItem('accessToken'),\r\n      },\r\n    }\r\n  ) => {\r\n    dispatch(setLoading());\r\n    try {\r\n      const res = await axios.delete(url, { ...config, params });\r\n      setResponse({ msg: 'deleted' });\r\n      setErr(null);\r\n      dispatch(setSuccess());\r\n    } catch (error) {\r\n      handleError(error, dispatch, setErr, history);\r\n    }\r\n  };\r\n\r\n  return [response, err, cb];\r\n};\r\n\r\nexport const usePut = () => {\r\n  const [err, setErr] = useState(null);\r\n  const [response, setResponse] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const cb = async (\r\n    url,\r\n    data,\r\n    config = {\r\n      headers: {\r\n        authorization: localStorage.getItem('accessToken'),\r\n      },\r\n    }\r\n  ) => {\r\n    dispatch(setLoading());\r\n    try {\r\n      const res = await axios.put(url, data, config);\r\n      console.log('put res', res);\r\n      setResponse(res.data);\r\n      setErr(null);\r\n      dispatch(setSuccess());\r\n    } catch (error) {\r\n      handleError(error, dispatch, setErr, history);\r\n    }\r\n  };\r\n\r\n  return [response, err, cb];\r\n};\r\n","/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initStage = {\r\n  fetch: false,\r\n  success: false,\r\n  error: false,\r\n  nodes: [],\r\n};\r\n\r\nexport const nodesSlice = createSlice({\r\n  name: 'nodes',\r\n  initialState: {\r\n    ...initStage,\r\n  },\r\n  reducers: {\r\n    setFetch: (state) => {\r\n      state.fetch = true;\r\n      state.error = false;\r\n      state.success = false;\r\n    },\r\n    setSuccess: (state, action) => {\r\n      state.fetch = false;\r\n      state.error = false;\r\n      state.success = true;\r\n      state.nodes = [...action.payload.nodes];\r\n    },\r\n    setError: (state) => {\r\n      state.fetch = false;\r\n      state.error = true;\r\n      state.success = false;\r\n    },\r\n    addNode: (state, action) => {\r\n      state.nodes.push(action.payload.node);\r\n    },\r\n    deleteNode: (state, action) => {\r\n      state.nodes = [...state.nodes.filter((node) => node._id !== action.payload.id)];\r\n    },\r\n    updateNode: (state, action) => {\r\n      state.nodes = [\r\n        ...state.nodes.map((node) => {\r\n          console.log(node._id, action.payload.node._id, node._id === action.payload.node._id);\r\n          return node._id === action.payload.node._id ? action.payload.node : node;\r\n        }),\r\n      ];\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setFetch,\r\n  setError,\r\n  setSuccess,\r\n  addNode,\r\n  updateNode,\r\n  deleteNode,\r\n} = nodesSlice.actions;\r\n\r\nexport const selectNode = (state) => state.ApiCall;\r\n\r\nexport default nodesSlice.reducer;\r\n","/* eslint-disable react/jsx-curly-newline */\r\nimport React, { useState, useEffect } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport { Button } from '@material-ui/core';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Link from '@material-ui/core/Link';\r\nimport FileUpload from '../FileUpload';\r\nimport {\r\n  setName,\r\n  setDescription,\r\n  setType,\r\n  setImg,\r\n  setVideo,\r\n  setMarkdown,\r\n  setQuiz,\r\n  setExam,\r\n  setAssignment,\r\n  addResource,\r\n  deleteResource,\r\n  reset,\r\n} from '../../store/Slices/node';\r\nimport { usePost, usePut } from '../../hooks/useAsync';\r\nimport { updateNode, addNode } from '../../store/Slices/nodes';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: '100%',\r\n  },\r\n\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(2, 1),\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n  const state = useSelector((s) => s.node);\r\n  const dispatch = useDispatch();\r\n  const [resource, setResource] = useState({ name: '', uri: '' });\r\n  const [contentUpload, setContentUpload] = useState({\r\n    image: '',\r\n    imgBtn: false,\r\n    video: '',\r\n    videoImg: false,\r\n  });\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const [response, error, post] = usePost();\r\n  const [resPut, errPut, put] = usePut();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (state.id !== '') {\r\n      put('/admin/nodes', {\r\n        id: state.id,\r\n        name: state.name,\r\n        description: state.description,\r\n        img: state.img,\r\n        video: state.video,\r\n        markdown: state.markdown,\r\n        resources: [...state.resources],\r\n        quiz: state.quiz,\r\n        exam: state.exam,\r\n        assignment: state.assignment,\r\n      });\r\n      return;\r\n    }\r\n    post('/admin/nodes', {\r\n      name: state.name,\r\n      description: state.description,\r\n      img: state.img,\r\n      video: state.video,\r\n      markdown: state.markdown,\r\n      resources: [...state.resources],\r\n      quiz: state.quiz,\r\n      exam: state.exam,\r\n      assignment: state.assignment,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (response) {\r\n      setSuccess(true);\r\n      dispatch(\r\n        addNode({\r\n          node: {\r\n            _id: response.id,\r\n            type: state.type,\r\n            name: state.name,\r\n            description: state.description,\r\n            updated: new Date().toString(),\r\n            img: state.img,\r\n            video: state.video,\r\n            creator: {\r\n              _id: localStorage.getItem('_id'),\r\n              name: localStorage.getItem('name'),\r\n            },\r\n          },\r\n        })\r\n      );\r\n      window.setTimeout(() => {\r\n        setSuccess(false);\r\n        dispatch(reset());\r\n        setResource({ name: '', uri: '' });\r\n      }, 1000);\r\n    }\r\n  }, [response]);\r\n\r\n  useEffect(() => {\r\n    if (resPut) {\r\n      setSuccess(true);\r\n      dispatch(updateNode({ id: state.id, node: { ...state } }));\r\n\r\n      window.setTimeout(() => {\r\n        setSuccess(false);\r\n        dispatch(reset());\r\n        setResource({ name: '', uri: '' });\r\n      }, 1000);\r\n    }\r\n  }, [resPut]);\r\n\r\n  useEffect(() => {\r\n    console.log('error', error);\r\n  }, [error]);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\">\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n            Add Node\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {success && (\r\n            <Typography color=\"primary\" align=\"center\">\r\n              {state.id === '' ? 'Node added successfully :)' : 'Node updated successfully :)'}\r\n            </Typography>\r\n          )}\r\n          <form className={classes.form} noValidate={false} onSubmit={submitHandler}>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl variant=\"outlined\" className={classes.formControl} error={error?.type}>\r\n                  <InputLabel id=\"type-label\">Select Type</InputLabel>\r\n                  <Select\r\n                    labelId=\"type-label\"\r\n                    id=\"type\"\r\n                    value={state.type}\r\n                    required\r\n                    onChange={(event) => dispatch(setType(event.target.value))}\r\n                    fullWidth\r\n                    label=\"Select Type\"\r\n                  >\r\n                    <MenuItem value=\"free\">Free</MenuItem>\r\n                    <MenuItem value=\"paid\">Paid</MenuItem>\r\n                  </Select>\r\n                  {error?.type && <FormHelperText>{error?.type}</FormHelperText>}\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"name\"\r\n                  label=\"Name\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  value={state.name}\r\n                  onChange={(event) => dispatch(setName(event.target.value))}\r\n                  className={classes.formControl}\r\n                  error={error?.name}\r\n                  helperText={error?.name}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"description\"\r\n                  label=\"Description\"\r\n                  required\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  value={state.description}\r\n                  onChange={(event) => dispatch(setDescription(event.target.value))}\r\n                  className={classes.formControl}\r\n                  error={error?.description}\r\n                  helperText={error?.description}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\" error={error?.img}>\r\n                  <InputLabel htmlFor=\"image\">Image Link</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"image\"\r\n                    value={state.img}\r\n                    onChange={(event) => dispatch(setImg(event.target.value))}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle image upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({ ...contentUpload, imgBtn: !contentUpload.imgBtn })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.imgBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={85}\r\n                  />\r\n                  {error?.img && <FormHelperText>{error?.img}</FormHelperText>}\r\n                </FormControl>\r\n              </Grid>\r\n              <Collapse\r\n                in={contentUpload.imgBtn}\r\n                timeout=\"auto\"\r\n                unmountOnExit\r\n                style={{ width: '100%' }}\r\n              >\r\n                <Grid item xs={12}>\r\n                  <FileUpload type=\"image\" />\r\n                </Grid>\r\n              </Collapse>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl\r\n                  className={classes.formControl}\r\n                  variant=\"outlined\"\r\n                  error={error?.markdown}\r\n                >\r\n                  <InputLabel htmlFor=\"markdown\">Detail Description Link</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"markdown\"\r\n                    value={state.markdown}\r\n                    onChange={(event) => dispatch(setMarkdown(event.target.value))}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() => {\r\n                            window.open('/editor', '_blank');\r\n                          }}\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          <LaunchIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={165}\r\n                  />\r\n                  {error?.markdown && <FormHelperText>{error?.markdown}</FormHelperText>}\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl\r\n                  className={classes.formControl}\r\n                  variant=\"outlined\"\r\n                  error={error?.video}\r\n                >\r\n                  <InputLabel htmlFor=\"video\">Video Link</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"video\"\r\n                    value={state.video}\r\n                    onChange={(event) => dispatch(setVideo(event.target.value))}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              videoBtn: !contentUpload.videoBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.videoBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={85}\r\n                  />\r\n                  {error?.video && <FormHelperText>{error?.video}</FormHelperText>}\r\n                </FormControl>\r\n              </Grid>\r\n              <Collapse\r\n                in={contentUpload.videoBtn}\r\n                timeout=\"auto\"\r\n                unmountOnExit\r\n                style={{ width: '100%' }}\r\n              >\r\n                <Grid item xs={12}>\r\n                  <FileUpload type=\"video\" />\r\n                </Grid>\r\n              </Collapse>\r\n              <Grid item xs={12}>\r\n                {error?.resources && (\r\n                  <Typography color=\"error\" align=\"center\">\r\n                    {error?.resources}\r\n                  </Typography>\r\n                )}\r\n                <Grid container spacing={2} style={{ paddingLeft: '5', paddingRight: '5' }}>\r\n                  {state.resources.map((res) => (\r\n                    <Grid item xs={12} sm={6} key={res.id}>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={1}>\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              for (let idx = 0; idx < state.resources.length; idx += 1) {\r\n                                if (res.id === state.resources[idx].id) {\r\n                                  setResource({\r\n                                    name: state.resources[idx].name,\r\n                                    uri: state.resources[idx].uri,\r\n                                  });\r\n                                  dispatch(deleteResource({ id: res.id }));\r\n                                  break;\r\n                                }\r\n                              }\r\n                            }}\r\n                          >\r\n                            <EditIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={10}\r\n                          style={{\r\n                            paddingTop: 20,\r\n                            paddingLeft: 20,\r\n                            wordWrap: 'break-word',\r\n                          }}\r\n                        >\r\n                          <Link href={res.uri}>{res.name}</Link>\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n                          <IconButton onClick={() => dispatch(deleteResource({ id: res.id }))}>\r\n                            <DeleteIcon color=\"error\" />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"resources-name\"\r\n                  label=\"Resources Name\"\r\n                  variant=\"outlined\"\r\n                  value={resource.name}\r\n                  onChange={(e) => setResource({ ...resource, name: e.target.value })}\r\n                  className={classes.formControl}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">Resource Link</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"resource-link\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Collapse\r\n                in={contentUpload.resourceBtn}\r\n                timeout=\"auto\"\r\n                unmountOnExit\r\n                style={{ width: '100%' }}\r\n              >\r\n                <Grid item xs={12}>\r\n                  <FileUpload type=\"any file\" />\r\n                </Grid>\r\n              </Collapse>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\" error={error?.quiz}>\r\n                  <InputLabel htmlFor=\"quiz\">Quiz Link</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"quiz\"\r\n                    value={state.quiz}\r\n                    onChange={(event) => dispatch(setQuiz(event.target.value))}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() => {\r\n                            window.open('https://forms.google.com', '_blank');\r\n                          }}\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          <LaunchIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={70}\r\n                  />\r\n                  {error?.quiz && <FormHelperText>{error?.quiz}</FormHelperText>}\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\" error={error?.exam}>\r\n                  <InputLabel htmlFor=\"exam\">Exam Link</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"exam\"\r\n                    value={state.exam}\r\n                    onChange={(event) => dispatch(setExam(event.target.value))}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() => {\r\n                            window.open('https://forms.google.com', '_blank');\r\n                          }}\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          <LaunchIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={80}\r\n                  />\r\n                  {error?.exam && <FormHelperText>{error?.exam}</FormHelperText>}\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"assignment\"\r\n                  label=\"Assignment Link\"\r\n                  variant=\"outlined\"\r\n                  value={state.assignment}\r\n                  onChange={(event) => dispatch(setAssignment(event.target.value))}\r\n                  className={classes.formControl}\r\n                  error={error?.assignment}\r\n                  helperText={error?.assignment}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  className={classes.submit}\r\n                  fullWidth\r\n                >\r\n                  {state.id === '' ? 'Add a new Node' : 'Update the node'}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Link from '@material-ui/core/Link';\r\nimport { getYTVideoThumbnail, toDate } from '../../assets/functions/util';\r\nimport { useDelete, useGet } from '../../hooks/useAsync';\r\nimport { setNode } from '../../store/Slices/node';\r\nimport { deleteNode } from '../../store/Slices/nodes';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  hover: {\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n  instructorName: {\r\n    fontWeight: 'bold',\r\n    paddingTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  sectionContainer: {\r\n    backgroundColor: 'red',\r\n  },\r\n  sectionTitle: {\r\n    padding: theme.spacing(2, 0),\r\n  },\r\n\r\n  priceAction: {\r\n    marginTop: theme.spacing(1),\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    // width: '100%',\r\n  },\r\n}));\r\n\r\nconst NodeCard = ({\r\n  title,\r\n  description,\r\n  creator,\r\n  lastUpdated,\r\n  type,\r\n  img,\r\n  video,\r\n  id,\r\n  creatorId,\r\n  switchToAddNode,\r\n}) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [dialog, setDialog] = useState({ open: false, type: '' });\r\n  const [resDel, errDel, del] = useDelete();\r\n  const [resGet, errGet, get] = useGet();\r\n  const loading = useSelector((state) => state.apiCall.loading);\r\n\r\n  useEffect(() => {\r\n    if (resDel) {\r\n      console.log('del', resDel);\r\n      dispatch(deleteNode({ id }));\r\n    }\r\n  }, [resDel]);\r\n\r\n  useEffect(() => {\r\n    if (errDel) {\r\n      console.log('del', errDel);\r\n    }\r\n  }, [errDel]);\r\n\r\n  useEffect(() => {\r\n    if (resGet) {\r\n      console.log('res', resGet.nodes[0]);\r\n      // eslint-disable-next-line no-underscore-dangle\r\n      const node = resGet.nodes[0];\r\n      dispatch(\r\n        setNode({\r\n          // eslint-disable-next-line no-underscore-dangle\r\n          id: node._id,\r\n          name: node.name,\r\n          description: node.description,\r\n          img: node.img || '',\r\n          video: node.video || '',\r\n          markdown: node.markdown || '',\r\n          quiz: node.quiz || '',\r\n          exam: node.exam || '',\r\n          assignment: node.assignment || '',\r\n          resources: node.resources || [],\r\n          type: node.type,\r\n        })\r\n      );\r\n      switchToAddNode();\r\n    }\r\n  }, [resGet]);\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.card}>\r\n        {(img || video) && (\r\n          <CardMedia\r\n            className={`${classes.cardMedia} ${classes.hover}`}\r\n            image={video ? getYTVideoThumbnail(video) : img}\r\n            title={`${title}-image`}\r\n            onClick={() => {\r\n              history.push(`/view/${type}/${id}`);\r\n            }}\r\n          />\r\n        )}\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography gutterBottom variant=\"h6\" component=\"h3\" className={classes.hover}>\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" className={classes.hover}>\r\n            {description.substring(0, 100)}\r\n            {description.length > 100 && `...`}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color=\"textSecondary\"\r\n            className={`${classes.hover} ${classes.instructorName}`}\r\n          >\r\n            <Link color=\"inherit\" href={`/profile/${creatorId}`} target=\"_blank\">\r\n              {creator}\r\n            </Link>\r\n          </Typography>\r\n          <Grid container justify=\"space-between\">\r\n            <Grid item>\r\n              <Typography variant=\"caption\" color=\"textSecondary\">\r\n                <strong>{toDate(lastUpdated)}</strong>\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <div className={classes.priceAction}>\r\n                <Typography variant=\"body1\">{type}</Typography>\r\n                <Button\r\n                  size=\"small\"\r\n                  color=\"secondary\"\r\n                  variant=\"outlined\"\r\n                  onClick={() => setDialog({ type: 'delete', open: true })}\r\n                >\r\n                  Delete\r\n                </Button>\r\n                <Button\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  onClick={() => setDialog({ open: true, type: 'edit' })}\r\n                >\r\n                  Edit\r\n                </Button>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n      <Dialog\r\n        open={dialog.open}\r\n        onClose={() => setDialog({ open: false, type: '' })}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        {loading && <LinearProgress />}\r\n        <DialogTitle id=\"alert-dialog-title\">Do you want to {dialog.type}</DialogTitle>\r\n        <DialogContent>\r\n          <Card className={classes.card}>\r\n            {(img || video) && (\r\n              <CardMedia\r\n                className={`${classes.cardMedia} ${classes.hover}`}\r\n                image={video ? getYTVideoThumbnail(video) : img}\r\n                title={`${title}-image`}\r\n                onClick={() => {\r\n                  history.push(`/view/${type}/${id}`);\r\n                }}\r\n              />\r\n            )}\r\n            <CardContent className={classes.cardContent}>\r\n              <Typography gutterBottom variant=\"h6\" component=\"h3\" className={classes.hover}>\r\n                {title}\r\n              </Typography>\r\n              <Typography variant=\"body2\" className={classes.hover}>\r\n                {description.substring(0, 100)}\r\n                {description.length > 100 && `...`}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n                className={`${classes.hover} ${classes.instructorName}`}\r\n              >\r\n                <Link color=\"inherit\" href={`/profile/${creatorId}`} target=\"_blank\">\r\n                  {creator}\r\n                </Link>\r\n              </Typography>\r\n              <Grid container justify=\"space-between\">\r\n                <Grid item xs={6}>\r\n                  <Typography variant=\"caption\" color=\"textSecondary\">\r\n                    <strong>{toDate(lastUpdated)}</strong>\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Typography variant=\"body1\" align=\"right\">\r\n                    {type}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setDialog({ open: false, type: '', id: '' })} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              if (dialog.type === 'edit') {\r\n                get('/admin/nodes', { id });\r\n              } else if (dialog.type === 'delete') {\r\n                console.log('delete run');\r\n                del('/admin/nodes', { id });\r\n              }\r\n            }}\r\n            color=\"primary\"\r\n            autoFocus\r\n          >\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nNodeCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  creator: PropTypes.string.isRequired,\r\n  lastUpdated: PropTypes.string.isRequired,\r\n  img: PropTypes.string,\r\n  video: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  creatorId: PropTypes.string.isRequired,\r\n  switchToAddNode: PropTypes.func.isRequired,\r\n};\r\n\r\nNodeCard.defaultProps = {\r\n  img: undefined,\r\n  video: undefined,\r\n};\r\n\r\nexport default NodeCard;\r\n","/* eslint-disable no-underscore-dangle */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useSelector } from 'react-redux';\r\nimport CircleSpring from '../CircleSpring';\r\nimport NodeCard from './NodeCard';\r\n\r\nconst ViewNodes = ({ switchToAddNode }) => {\r\n  const nodes = useSelector((state) => state.nodes);\r\n\r\n  return (\r\n    <>\r\n      {nodes.success && (\r\n        <>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h4\"\r\n                align=\"center\"\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n              >\r\n                Nodes\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Container maxWidth=\"lg\">\r\n            <Grid container spacing={2}>\r\n              {nodes.nodes?.map((node) => (\r\n                <Grid item key={node._id} xs={12} sm={6} md={4} lg={3}>\r\n                  <NodeCard\r\n                    switchToAddNode={switchToAddNode}\r\n                    title={node.name}\r\n                    description={node.description}\r\n                    img={node.img}\r\n                    video={node.video}\r\n                    type={node.type}\r\n                    creator={node.creator?.name}\r\n                    creatorId={node.creator._id}\r\n                    id={node._id}\r\n                    lastUpdated={node.updated}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Container>\r\n        </>\r\n      )}\r\n      {nodes.fetch && <CircleSpring />}\r\n    </>\r\n  );\r\n};\r\n\r\nViewNodes.propTypes = { switchToAddNode: PropTypes.func.isRequired };\r\n\r\nViewNodes.defaultProps = {};\r\n\r\nexport default ViewNodes;\r\n","/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initStage = {\r\n  fetch: false,\r\n  success: false,\r\n  error: false,\r\n  courses: [],\r\n};\r\n\r\nexport const coursesSlice = createSlice({\r\n  name: 'courses',\r\n  initialState: {\r\n    ...initStage,\r\n  },\r\n  reducers: {\r\n    setFetch: (state) => {\r\n      state.fetch = true;\r\n      state.error = false;\r\n      state.success = false;\r\n    },\r\n    setSuccess: (state, action) => {\r\n      state.fetch = false;\r\n      state.error = false;\r\n      state.success = true;\r\n      state.courses = [...action.payload.courses];\r\n    },\r\n    setError: (state) => {\r\n      state.fetch = false;\r\n      state.error = true;\r\n      state.success = false;\r\n    },\r\n    addCourse: (state, action) => {\r\n      state.courses.push(action.payload.course);\r\n    },\r\n    deleteCourse: (state, action) => {\r\n      state.noes = [...state.noes.filter((course) => course._id !== action.payload.id)];\r\n    },\r\n    updateCourse: (state, action) => {\r\n      state.courses = [\r\n        ...state.courses.map((course) =>\r\n          course._id === action.payload.course._id ? action.payload.course : course\r\n        ),\r\n      ];\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setFetch,\r\n  setError,\r\n  setSuccess,\r\n  addCourse,\r\n  updateCourse,\r\n  deleteCourse,\r\n} = coursesSlice.actions;\r\n\r\nexport const selectNode = (state) => state.ApiCall;\r\n\r\nexport default coursesSlice.reducer;\r\n","/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initStage = {\r\n  fetch: false,\r\n  success: false,\r\n  error: false,\r\n  goals: [],\r\n};\r\n\r\nexport const goalsSlice = createSlice({\r\n  name: 'goals',\r\n  initialState: {\r\n    ...initStage,\r\n  },\r\n  reducers: {\r\n    setFetch: (state) => {\r\n      state.fetch = true;\r\n      state.error = false;\r\n      state.success = false;\r\n    },\r\n    setSuccess: (state, action) => {\r\n      state.fetch = false;\r\n      state.error = false;\r\n      state.success = true;\r\n      state.goals = [...action.payload.goals];\r\n    },\r\n    setError: (state) => {\r\n      state.fetch = false;\r\n      state.error = true;\r\n      state.success = false;\r\n    },\r\n    addGoal: (state, action) => {\r\n      state.goals.push(action.payload.goal);\r\n    },\r\n    deleteGoal: (state, action) => {\r\n      state.noes = [...state.noes.filter((goal) => goal._id !== action.payload.id)];\r\n    },\r\n    updateGoal: (state, action) => {\r\n      state.goals = [\r\n        ...state.goals.map((goal) =>\r\n          goal._id === action.payload.goal._id ? action.payload.goal : goal\r\n        ),\r\n      ];\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setFetch,\r\n  setError,\r\n  setSuccess,\r\n  addGoal,\r\n  updateGoal,\r\n  deleteGoal,\r\n} = goalsSlice.actions;\r\n\r\nexport const selectNode = (state) => state.ApiCall;\r\n\r\nexport default goalsSlice.reducer;\r\n","/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initStage = {\r\n  fetch: false,\r\n  success: false,\r\n  error: false,\r\n  projects: [],\r\n};\r\n\r\nexport const projectsSlice = createSlice({\r\n  name: 'projects',\r\n  initialState: {\r\n    ...initStage,\r\n  },\r\n  reducers: {\r\n    setFetch: (state) => {\r\n      state.fetch = true;\r\n      state.error = false;\r\n      state.success = false;\r\n    },\r\n    setSuccess: (state, action) => {\r\n      state.fetch = false;\r\n      state.error = false;\r\n      state.success = true;\r\n      state.projects = [...action.payload.projects];\r\n    },\r\n    setError: (state) => {\r\n      state.fetch = false;\r\n      state.error = true;\r\n      state.success = false;\r\n    },\r\n    addProject: (state, action) => {\r\n      state.projects.push(action.payload.project);\r\n    },\r\n    deleteProject: (state, action) => {\r\n      state.noes = [...state.noes.filter((project) => project._id !== action.payload.id)];\r\n    },\r\n    updateProject: (state, action) => {\r\n      state.projects = [\r\n        ...state.projects.map((project) =>\r\n          project._id === action.payload.project._id ? action.payload.project : project\r\n        ),\r\n      ];\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setFetch,\r\n  setError,\r\n  setSuccess,\r\n  addProject,\r\n  updateProject,\r\n  deleteProject,\r\n} = projectsSlice.actions;\r\n\r\nexport const selectNode = (state) => state.ApiCall;\r\n\r\nexport default projectsSlice.reducer;\r\n","/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initStage = {\r\n  fetch: false,\r\n  success: false,\r\n  error: false,\r\n  exams: [],\r\n};\r\n\r\nexport const examsSlice = createSlice({\r\n  name: 'exams',\r\n  initialState: {\r\n    ...initStage,\r\n  },\r\n  reducers: {\r\n    setFetch: (state) => {\r\n      state.fetch = true;\r\n      state.error = false;\r\n      state.success = false;\r\n    },\r\n    setSuccess: (state, action) => {\r\n      state.fetch = false;\r\n      state.error = false;\r\n      state.success = true;\r\n      state.exams = [...action.payload.exams];\r\n    },\r\n    setError: (state) => {\r\n      state.fetch = false;\r\n      state.error = true;\r\n      state.success = false;\r\n    },\r\n    addExam: (state, action) => {\r\n      state.exams.push(action.payload.exam);\r\n    },\r\n    deleteExam: (state, action) => {\r\n      state.noes = [...state.noes.filter((exam) => exam._id !== action.payload.id)];\r\n    },\r\n    updateExam: (state, action) => {\r\n      state.exams = [\r\n        ...state.exams.map((exam) =>\r\n          exam._id === action.payload.exam._id ? action.payload.exam : exam\r\n        ),\r\n      ];\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setFetch,\r\n  setError,\r\n  setSuccess,\r\n  addExam,\r\n  updateExam,\r\n  deleteExam,\r\n} = examsSlice.actions;\r\n\r\nexport const selectNode = (state) => state.ApiCall;\r\n\r\nexport default examsSlice.reducer;\r\n","/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initStage = {\r\n  fetch: false,\r\n  success: false,\r\n  error: false,\r\n  assignments: [],\r\n};\r\n\r\nexport const assignmentsSlice = createSlice({\r\n  name: 'assignments',\r\n  initialState: {\r\n    ...initStage,\r\n  },\r\n  reducers: {\r\n    setFetch: (state) => {\r\n      state.fetch = true;\r\n      state.error = false;\r\n      state.success = false;\r\n    },\r\n    setSuccess: (state, action) => {\r\n      state.fetch = false;\r\n      state.error = false;\r\n      state.success = true;\r\n      state.assignments = [...action.payload.assignments];\r\n    },\r\n    setError: (state) => {\r\n      state.fetch = false;\r\n      state.error = true;\r\n      state.success = false;\r\n    },\r\n    addAssignment: (state, action) => {\r\n      state.assignments.push(action.payload.assignment);\r\n    },\r\n    deleteAssignment: (state, action) => {\r\n      state.noes = [...state.noes.filter((assignment) => assignment._id !== action.payload.id)];\r\n    },\r\n    updateAssignment: (state, action) => {\r\n      state.assignments = [\r\n        ...state.assignments.map((assignment) =>\r\n          assignment._id === action.payload.assignment._id ? action.payload.assignment : assignment\r\n        ),\r\n      ];\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setFetch,\r\n  setError,\r\n  setSuccess,\r\n  addAssignment,\r\n  updateAssignment,\r\n  deleteAssignment,\r\n} = assignmentsSlice.actions;\r\n\r\nexport const selectNode = (state) => state.ApiCall;\r\n\r\nexport default assignmentsSlice.reducer;\r\n","/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initStage = {\r\n  fetch: false,\r\n  success: false,\r\n  error: false,\r\n  instructors: [],\r\n};\r\n\r\nexport const instructorsSlice = createSlice({\r\n  name: 'instructors',\r\n  initialState: {\r\n    ...initStage,\r\n  },\r\n  reducers: {\r\n    setFetch: (state) => {\r\n      state.fetch = true;\r\n      state.error = false;\r\n      state.success = false;\r\n    },\r\n    setSuccess: (state, action) => {\r\n      state.fetch = false;\r\n      state.error = false;\r\n      state.success = true;\r\n      state.instructors = [...action.payload.instructors];\r\n    },\r\n    setError: (state) => {\r\n      state.fetch = false;\r\n      state.error = true;\r\n      state.success = false;\r\n    },\r\n    addInstructor: (state, action) => {\r\n      state.instructors.push(action.payload.instructor);\r\n    },\r\n    deleteInstructor: (state, action) => {\r\n      state.noes = [...state.noes.filter((instructor) => instructor._id !== action.payload.id)];\r\n    },\r\n    updateInstructor: (state, action) => {\r\n      state.instructors = [\r\n        ...state.instructors.map((instructor) =>\r\n          instructor._id === action.payload.instructor._id ? action.payload.instructor : instructor\r\n        ),\r\n      ];\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setFetch,\r\n  setError,\r\n  setSuccess,\r\n  addInstructor,\r\n  updateInstructor,\r\n  deleteInstructor,\r\n} = instructorsSlice.actions;\r\n\r\nexport const selectNode = (state) => state.ApiCall;\r\n\r\nexport default instructorsSlice.reducer;\r\n","/* eslint-disable no-underscore-dangle */\r\nimport React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useSelector } from 'react-redux';\r\nimport CircleSpring from '../CircleSpring';\r\nimport CourseCard from '../CourseCard';\r\n\r\nconst ViewNodes = () => {\r\n  const courses = useSelector((state) => state.courses);\r\n\r\n  return (\r\n    <>\r\n      {courses.success && (\r\n        <>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h4\"\r\n                align=\"center\"\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n              >\r\n                Courses\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Container maxWidth=\"lg\">\r\n            <Grid container spacing={2}>\r\n              {courses.courses?.map((course) => (\r\n                <Grid item key={course._id} xs={12} sm={6} md={4} lg={3}>\r\n                  <CourseCard\r\n                    title={course.name}\r\n                    description={course.description}\r\n                    creator={course.creator.name}\r\n                    lastUpdated={course.updated}\r\n                    rating={Number(course.rating) || 0}\r\n                    totalRating={Number(course.totalRating) || 0}\r\n                    price={course.price}\r\n                    img={course.img}\r\n                    vide={course.video}\r\n                    type=\"course\"\r\n                    id={course._id}\r\n                    creatorId={course.creator._id}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Container>\r\n        </>\r\n      )}\r\n      {courses.fetch && <CircleSpring />}\r\n    </>\r\n  );\r\n};\r\n\r\nViewNodes.propTypes = {};\r\n\r\nViewNodes.defaultProps = {};\r\n\r\nexport default ViewNodes;\r\n","/* eslint-disable no-underscore-dangle */\r\nimport React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useSelector } from 'react-redux';\r\nimport CircleSpring from '../CircleSpring';\r\nimport CourseCard from '../CourseCard';\r\n\r\nconst ViewNodes = () => {\r\n  const goals = useSelector((state) => state.goals);\r\n\r\n  return (\r\n    <>\r\n      {goals.success && (\r\n        <>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h4\"\r\n                align=\"center\"\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n              >\r\n                Goals\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Container maxWidth=\"lg\">\r\n            <Grid container spacing={2}>\r\n              {goals.goals?.map((goal) => (\r\n                <Grid item key={goal._id} xs={12} sm={6} md={4} lg={3}>\r\n                  <CourseCard\r\n                    title={goal.name}\r\n                    description={goal.description}\r\n                    creator={goal.creator.name}\r\n                    lastUpdated={goal.updated}\r\n                    rating={Number(goal.rating) || 0}\r\n                    totalRating={Number(goal.totalRating) || 0}\r\n                    price={goal.price}\r\n                    img={goal.img}\r\n                    vide={goal.video}\r\n                    type=\"goal\"\r\n                    id={goal._id}\r\n                    creatorId={goal.creator._id}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Container>\r\n        </>\r\n      )}\r\n      {goals.fetch && <CircleSpring />}\r\n    </>\r\n  );\r\n};\r\n\r\nViewNodes.propTypes = {};\r\n\r\nViewNodes.defaultProps = {};\r\n\r\nexport default ViewNodes;\r\n","/* eslint-disable no-underscore-dangle */\r\nimport React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useSelector } from 'react-redux';\r\nimport CircleSpring from '../CircleSpring';\r\nimport CourseCard from '../CourseCard';\r\n\r\nconst ViewNodes = () => {\r\n  const projects = useSelector((state) => state.projects);\r\n\r\n  return (\r\n    <>\r\n      {projects.success && (\r\n        <>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h4\"\r\n                align=\"center\"\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n              >\r\n                Projects\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Container maxWidth=\"lg\">\r\n            <Grid container spacing={2}>\r\n              {projects.projects?.map((project) => (\r\n                <Grid item key={project._id} xs={12} sm={6} md={4} lg={3}>\r\n                  <CourseCard\r\n                    title={project.name}\r\n                    description={project.description}\r\n                    creator={project.creator.name}\r\n                    lastUpdated={project.updated}\r\n                    rating={Number(project.rating) || 0}\r\n                    totalRating={Number(project.totalRating) || 0}\r\n                    price={project.price}\r\n                    img={project.img}\r\n                    vide={project.video}\r\n                    type=\"project\"\r\n                    id={project._id}\r\n                    creatorId={project.creator._id}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Container>\r\n        </>\r\n      )}\r\n      {projects.fetch && <CircleSpring />}\r\n    </>\r\n  );\r\n};\r\n\r\nViewNodes.propTypes = {};\r\n\r\nViewNodes.defaultProps = {};\r\n\r\nexport default ViewNodes;\r\n","/* eslint-disable react/jsx-curly-newline */\r\nimport React, { useState, useEffect } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport { Button } from '@material-ui/core';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Link from '@material-ui/core/Link';\r\nimport FileUpload from '../FileUpload';\r\nimport {\r\n  setName,\r\n  setDescription,\r\n  setType,\r\n  setImg,\r\n  setVideo,\r\n  setMarkdown,\r\n  setQuiz,\r\n  setExam,\r\n  setAssignment,\r\n  addResource,\r\n  deleteResource,\r\n  reset,\r\n} from '../../store/Slices/node';\r\nimport { usePost, usePut } from '../../hooks/useAsync';\r\nimport { updateNode, addNode } from '../../store/Slices/nodes';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: '100%',\r\n  },\r\n\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(2, 1),\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n  const state = useSelector((s) => s.node);\r\n  const dispatch = useDispatch();\r\n  const [resource, setResource] = useState({ name: '', uri: '' });\r\n  const [contentUpload, setContentUpload] = useState({\r\n    image: '',\r\n    imgBtn: false,\r\n    video: '',\r\n    videoImg: false,\r\n  });\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const [response, error, post] = usePost();\r\n  const [resPut, errPut, put] = usePut();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (state.id !== '') {\r\n      put('/admin/nodes', {\r\n        id: state.id,\r\n        name: state.name,\r\n        description: state.description,\r\n        img: state.img,\r\n        video: state.video,\r\n        markdown: state.markdown,\r\n        resources: [...state.resources],\r\n        quiz: state.quiz,\r\n        exam: state.exam,\r\n        assignment: state.assignment,\r\n      });\r\n      return;\r\n    }\r\n    post('/admin/nodes', {\r\n      name: state.name,\r\n      description: state.description,\r\n      img: state.img,\r\n      video: state.video,\r\n      markdown: state.markdown,\r\n      resources: [...state.resources],\r\n      quiz: state.quiz,\r\n      exam: state.exam,\r\n      assignment: state.assignment,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (response) {\r\n      setSuccess(true);\r\n      dispatch(\r\n        addNode({\r\n          node: {\r\n            _id: response.id,\r\n            type: state.type,\r\n            name: state.name,\r\n            description: state.description,\r\n            updated: new Date().toString(),\r\n            img: state.img,\r\n            video: state.video,\r\n            creator: {\r\n              _id: localStorage.getItem('_id'),\r\n              name: localStorage.getItem('name'),\r\n            },\r\n          },\r\n        })\r\n      );\r\n      window.setTimeout(() => {\r\n        setSuccess(false);\r\n        dispatch(reset());\r\n        setResource({ name: '', uri: '' });\r\n      }, 1000);\r\n    }\r\n  }, [response]);\r\n\r\n  useEffect(() => {\r\n    if (resPut) {\r\n      setSuccess(true);\r\n      dispatch(updateNode({ id: state.id, node: { ...state } }));\r\n\r\n      window.setTimeout(() => {\r\n        setSuccess(false);\r\n        dispatch(reset());\r\n        setResource({ name: '', uri: '' });\r\n      }, 1000);\r\n    }\r\n  }, [resPut]);\r\n\r\n  useEffect(() => {\r\n    console.log('error', error);\r\n  }, [error]);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\">\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n            Add Course\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {success && (\r\n            <Typography color=\"primary\" align=\"center\">\r\n              {state.id === '' ? 'Course added successfully :)' : 'Course updated successfully :)'}\r\n            </Typography>\r\n          )}\r\n          <form className={classes.form} noValidate={false} onSubmit={submitHandler}>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"price\"\r\n                  label=\"Price\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  value={state.name}\r\n                  onChange={(event) => dispatch(setName(event.target.value))}\r\n                  className={classes.formControl}\r\n                  error={error?.name}\r\n                  helperText={error?.name}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"name\"\r\n                  label=\"Name\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  value={state.name}\r\n                  onChange={(event) => dispatch(setName(event.target.value))}\r\n                  className={classes.formControl}\r\n                  error={error?.name}\r\n                  helperText={error?.name}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"description\"\r\n                  label=\"Description\"\r\n                  required\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  value={state.description}\r\n                  onChange={(event) => dispatch(setDescription(event.target.value))}\r\n                  className={classes.formControl}\r\n                  error={error?.description}\r\n                  helperText={error?.description}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\" error={error?.img}>\r\n                  <InputLabel htmlFor=\"image\">Image Link</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"image\"\r\n                    value={state.img}\r\n                    onChange={(event) => dispatch(setImg(event.target.value))}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle image upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({ ...contentUpload, imgBtn: !contentUpload.imgBtn })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.imgBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={85}\r\n                  />\r\n                  {error?.img && <FormHelperText>{error?.img}</FormHelperText>}\r\n                </FormControl>\r\n              </Grid>\r\n              <Collapse\r\n                in={contentUpload.imgBtn}\r\n                timeout=\"auto\"\r\n                unmountOnExit\r\n                style={{ width: '100%' }}\r\n              >\r\n                <Grid item xs={12}>\r\n                  <FileUpload type=\"image\" />\r\n                </Grid>\r\n              </Collapse>\r\n              <Grid item xs={12}>\r\n                <FormControl\r\n                  className={classes.formControl}\r\n                  variant=\"outlined\"\r\n                  error={error?.video}\r\n                >\r\n                  <InputLabel htmlFor=\"video\">Video Link</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"video\"\r\n                    value={state.video}\r\n                    onChange={(event) => dispatch(setVideo(event.target.value))}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              videoBtn: !contentUpload.videoBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.videoBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={85}\r\n                  />\r\n                  {error?.video && <FormHelperText>{error?.video}</FormHelperText>}\r\n                </FormControl>\r\n              </Grid>\r\n              <Collapse\r\n                in={contentUpload.videoBtn}\r\n                timeout=\"auto\"\r\n                unmountOnExit\r\n                style={{ width: '100%' }}\r\n              >\r\n                <Grid item xs={12}>\r\n                  <FileUpload type=\"video\" />\r\n                </Grid>\r\n              </Collapse>\r\n\r\n              <Grid item xs={12}>\r\n                {error?.resources && (\r\n                  <Typography color=\"error\" align=\"center\">\r\n                    {error?.resources}\r\n                  </Typography>\r\n                )}\r\n                <Grid container spacing={2} style={{ paddingLeft: '5', paddingRight: '5' }}>\r\n                  {state.resources.map((res) => (\r\n                    <Grid item xs={12} sm={6} key={res.id}>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={1}>\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              for (let idx = 0; idx < state.resources.length; idx += 1) {\r\n                                if (res.id === state.resources[idx].id) {\r\n                                  setResource({\r\n                                    name: state.resources[idx].name,\r\n                                    uri: state.resources[idx].uri,\r\n                                  });\r\n                                  dispatch(deleteResource({ id: res.id }));\r\n                                  break;\r\n                                }\r\n                              }\r\n                            }}\r\n                          >\r\n                            <EditIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={10}\r\n                          style={{\r\n                            paddingTop: 20,\r\n                            paddingLeft: 20,\r\n                            wordWrap: 'break-word',\r\n                          }}\r\n                        >\r\n                          <Link href={res.uri}>{res.name}</Link>\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n                          <IconButton onClick={() => dispatch(deleteResource({ id: res.id }))}>\r\n                            <DeleteIcon color=\"error\" />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"node-chapter\"\r\n                  label=\"Chapter\"\r\n                  variant=\"outlined\"\r\n                  value={resource.name}\r\n                  onChange={(e) => setResource({ ...resource, name: e.target.value })}\r\n                  className={classes.formControl}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">Node ID</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"node-id\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"node-chapter\"\r\n                  label=\"Chapter\"\r\n                  variant=\"outlined\"\r\n                  value={resource.name}\r\n                  onChange={(e) => setResource({ ...resource, name: e.target.value })}\r\n                  className={classes.formControl}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">Exam ID</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"node-id\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"node-chapter\"\r\n                  label=\"Chapter\"\r\n                  variant=\"outlined\"\r\n                  value={resource.name}\r\n                  onChange={(e) => setResource({ ...resource, name: e.target.value })}\r\n                  className={classes.formControl}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">Project ID</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"node-id\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"node-chapter\"\r\n                  label=\"Chapter\"\r\n                  variant=\"outlined\"\r\n                  value={resource.name}\r\n                  onChange={(e) => setResource({ ...resource, name: e.target.value })}\r\n                  className={classes.formControl}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">Assignment ID</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"node-id\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                {error?.resources && (\r\n                  <Typography color=\"error\" align=\"center\">\r\n                    {error?.resources}\r\n                  </Typography>\r\n                )}\r\n                <Grid container spacing={2} style={{ paddingLeft: '5', paddingRight: '5' }}>\r\n                  {state.resources.map((res) => (\r\n                    <Grid item xs={12} sm={6} key={res.id}>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={1}>\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              for (let idx = 0; idx < state.resources.length; idx += 1) {\r\n                                if (res.id === state.resources[idx].id) {\r\n                                  setResource({\r\n                                    name: state.resources[idx].name,\r\n                                    uri: state.resources[idx].uri,\r\n                                  });\r\n                                  dispatch(deleteResource({ id: res.id }));\r\n                                  break;\r\n                                }\r\n                              }\r\n                            }}\r\n                          >\r\n                            <EditIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={10}\r\n                          style={{\r\n                            paddingTop: 20,\r\n                            paddingLeft: 20,\r\n                            wordWrap: 'break-word',\r\n                          }}\r\n                        >\r\n                          <Link href={res.uri}>{res.name}</Link>\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n                          <IconButton onClick={() => dispatch(deleteResource({ id: res.id }))}>\r\n                            <DeleteIcon color=\"error\" />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"resources-name\"\r\n                  label=\"Resources Name\"\r\n                  variant=\"outlined\"\r\n                  value={resource.name}\r\n                  onChange={(e) => setResource({ ...resource, name: e.target.value })}\r\n                  className={classes.formControl}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">Resource Link</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"resource-link\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Collapse\r\n                in={contentUpload.resourceBtn}\r\n                timeout=\"auto\"\r\n                unmountOnExit\r\n                style={{ width: '100%' }}\r\n              >\r\n                <Grid item xs={12}>\r\n                  <FileUpload type=\"any file\" />\r\n                </Grid>\r\n              </Collapse>\r\n\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">We will cover</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"resource-link\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">Requirments</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"resource-link\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">Courses for</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"resource-link\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  className={classes.submit}\r\n                  fullWidth\r\n                >\r\n                  {state.id === '' ? 'Add a new course' : 'Update the course'}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","/* eslint-disable react/jsx-curly-newline */\r\nimport React, { useState, useEffect } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport { Button } from '@material-ui/core';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Link from '@material-ui/core/Link';\r\nimport FileUpload from '../FileUpload';\r\nimport {\r\n  setName,\r\n  setDescription,\r\n  setType,\r\n  setImg,\r\n  setVideo,\r\n  setMarkdown,\r\n  setQuiz,\r\n  setExam,\r\n  setAssignment,\r\n  addResource,\r\n  deleteResource,\r\n  reset,\r\n} from '../../store/Slices/node';\r\nimport { usePost, usePut } from '../../hooks/useAsync';\r\nimport { updateNode, addNode } from '../../store/Slices/nodes';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: '100%',\r\n  },\r\n\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(2, 1),\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n  const state = useSelector((s) => s.node);\r\n  const dispatch = useDispatch();\r\n  const [resource, setResource] = useState({ name: '', uri: '' });\r\n  const [contentUpload, setContentUpload] = useState({\r\n    image: '',\r\n    imgBtn: false,\r\n    video: '',\r\n    videoImg: false,\r\n  });\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const [response, error, post] = usePost();\r\n  const [resPut, errPut, put] = usePut();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (state.id !== '') {\r\n      put('/admin/nodes', {\r\n        id: state.id,\r\n        name: state.name,\r\n        description: state.description,\r\n        img: state.img,\r\n        video: state.video,\r\n        markdown: state.markdown,\r\n        resources: [...state.resources],\r\n        quiz: state.quiz,\r\n        exam: state.exam,\r\n        assignment: state.assignment,\r\n      });\r\n      return;\r\n    }\r\n    post('/admin/nodes', {\r\n      name: state.name,\r\n      description: state.description,\r\n      img: state.img,\r\n      video: state.video,\r\n      markdown: state.markdown,\r\n      resources: [...state.resources],\r\n      quiz: state.quiz,\r\n      exam: state.exam,\r\n      assignment: state.assignment,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (response) {\r\n      setSuccess(true);\r\n      dispatch(\r\n        addNode({\r\n          node: {\r\n            _id: response.id,\r\n            type: state.type,\r\n            name: state.name,\r\n            description: state.description,\r\n            updated: new Date().toString(),\r\n            img: state.img,\r\n            video: state.video,\r\n            creator: {\r\n              _id: localStorage.getItem('_id'),\r\n              name: localStorage.getItem('name'),\r\n            },\r\n          },\r\n        })\r\n      );\r\n      window.setTimeout(() => {\r\n        setSuccess(false);\r\n        dispatch(reset());\r\n        setResource({ name: '', uri: '' });\r\n      }, 1000);\r\n    }\r\n  }, [response]);\r\n\r\n  useEffect(() => {\r\n    if (resPut) {\r\n      setSuccess(true);\r\n      dispatch(updateNode({ id: state.id, node: { ...state } }));\r\n\r\n      window.setTimeout(() => {\r\n        setSuccess(false);\r\n        dispatch(reset());\r\n        setResource({ name: '', uri: '' });\r\n      }, 1000);\r\n    }\r\n  }, [resPut]);\r\n\r\n  useEffect(() => {\r\n    console.log('error', error);\r\n  }, [error]);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\">\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n            Add Project\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {success && (\r\n            <Typography color=\"primary\" align=\"center\">\r\n              {state.id === ''\r\n                ? 'Project added successfully :)'\r\n                : 'Project updated successfully :)'}\r\n            </Typography>\r\n          )}\r\n          <form className={classes.form} noValidate={false} onSubmit={submitHandler}>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"price\"\r\n                  label=\"Price\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  value={state.name}\r\n                  onChange={(event) => dispatch(setName(event.target.value))}\r\n                  className={classes.formControl}\r\n                  error={error?.name}\r\n                  helperText={error?.name}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"name\"\r\n                  label=\"Name\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  value={state.name}\r\n                  onChange={(event) => dispatch(setName(event.target.value))}\r\n                  className={classes.formControl}\r\n                  error={error?.name}\r\n                  helperText={error?.name}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"description\"\r\n                  label=\"Description\"\r\n                  required\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  value={state.description}\r\n                  onChange={(event) => dispatch(setDescription(event.target.value))}\r\n                  className={classes.formControl}\r\n                  error={error?.description}\r\n                  helperText={error?.description}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\" error={error?.img}>\r\n                  <InputLabel htmlFor=\"image\">Image Link</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"image\"\r\n                    value={state.img}\r\n                    onChange={(event) => dispatch(setImg(event.target.value))}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle image upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({ ...contentUpload, imgBtn: !contentUpload.imgBtn })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.imgBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={85}\r\n                  />\r\n                  {error?.img && <FormHelperText>{error?.img}</FormHelperText>}\r\n                </FormControl>\r\n              </Grid>\r\n              <Collapse\r\n                in={contentUpload.imgBtn}\r\n                timeout=\"auto\"\r\n                unmountOnExit\r\n                style={{ width: '100%' }}\r\n              >\r\n                <Grid item xs={12}>\r\n                  <FileUpload type=\"image\" />\r\n                </Grid>\r\n              </Collapse>\r\n              <Grid item xs={12}>\r\n                <FormControl\r\n                  className={classes.formControl}\r\n                  variant=\"outlined\"\r\n                  error={error?.video}\r\n                >\r\n                  <InputLabel htmlFor=\"video\">Video Link</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"video\"\r\n                    value={state.video}\r\n                    onChange={(event) => dispatch(setVideo(event.target.value))}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              videoBtn: !contentUpload.videoBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.videoBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={85}\r\n                  />\r\n                  {error?.video && <FormHelperText>{error?.video}</FormHelperText>}\r\n                </FormControl>\r\n              </Grid>\r\n              <Collapse\r\n                in={contentUpload.videoBtn}\r\n                timeout=\"auto\"\r\n                unmountOnExit\r\n                style={{ width: '100%' }}\r\n              >\r\n                <Grid item xs={12}>\r\n                  <FileUpload type=\"video\" />\r\n                </Grid>\r\n              </Collapse>\r\n\r\n              <Grid item xs={12}>\r\n                {error?.resources && (\r\n                  <Typography color=\"error\" align=\"center\">\r\n                    {error?.resources}\r\n                  </Typography>\r\n                )}\r\n                <Grid container spacing={2} style={{ paddingLeft: '5', paddingRight: '5' }}>\r\n                  {state.resources.map((res) => (\r\n                    <Grid item xs={12} sm={6} key={res.id}>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={1}>\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              for (let idx = 0; idx < state.resources.length; idx += 1) {\r\n                                if (res.id === state.resources[idx].id) {\r\n                                  setResource({\r\n                                    name: state.resources[idx].name,\r\n                                    uri: state.resources[idx].uri,\r\n                                  });\r\n                                  dispatch(deleteResource({ id: res.id }));\r\n                                  break;\r\n                                }\r\n                              }\r\n                            }}\r\n                          >\r\n                            <EditIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={10}\r\n                          style={{\r\n                            paddingTop: 20,\r\n                            paddingLeft: 20,\r\n                            wordWrap: 'break-word',\r\n                          }}\r\n                        >\r\n                          <Link href={res.uri}>{res.name}</Link>\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n                          <IconButton onClick={() => dispatch(deleteResource({ id: res.id }))}>\r\n                            <DeleteIcon color=\"error\" />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"node-chapter\"\r\n                  label=\"Chapter\"\r\n                  variant=\"outlined\"\r\n                  value={resource.name}\r\n                  onChange={(e) => setResource({ ...resource, name: e.target.value })}\r\n                  className={classes.formControl}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">Node ID</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"node-id\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"node-chapter\"\r\n                  label=\"Chapter\"\r\n                  variant=\"outlined\"\r\n                  value={resource.name}\r\n                  onChange={(e) => setResource({ ...resource, name: e.target.value })}\r\n                  className={classes.formControl}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">Exam ID</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"node-id\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"node-chapter\"\r\n                  label=\"Chapter\"\r\n                  variant=\"outlined\"\r\n                  value={resource.name}\r\n                  onChange={(e) => setResource({ ...resource, name: e.target.value })}\r\n                  className={classes.formControl}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">Project ID</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"node-id\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"node-chapter\"\r\n                  label=\"Chapter\"\r\n                  variant=\"outlined\"\r\n                  value={resource.name}\r\n                  onChange={(e) => setResource({ ...resource, name: e.target.value })}\r\n                  className={classes.formControl}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">Assignment ID</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"node-id\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                {error?.resources && (\r\n                  <Typography color=\"error\" align=\"center\">\r\n                    {error?.resources}\r\n                  </Typography>\r\n                )}\r\n                <Grid container spacing={2} style={{ paddingLeft: '5', paddingRight: '5' }}>\r\n                  {state.resources.map((res) => (\r\n                    <Grid item xs={12} sm={6} key={res.id}>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={1}>\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              for (let idx = 0; idx < state.resources.length; idx += 1) {\r\n                                if (res.id === state.resources[idx].id) {\r\n                                  setResource({\r\n                                    name: state.resources[idx].name,\r\n                                    uri: state.resources[idx].uri,\r\n                                  });\r\n                                  dispatch(deleteResource({ id: res.id }));\r\n                                  break;\r\n                                }\r\n                              }\r\n                            }}\r\n                          >\r\n                            <EditIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={10}\r\n                          style={{\r\n                            paddingTop: 20,\r\n                            paddingLeft: 20,\r\n                            wordWrap: 'break-word',\r\n                          }}\r\n                        >\r\n                          <Link href={res.uri}>{res.name}</Link>\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n                          <IconButton onClick={() => dispatch(deleteResource({ id: res.id }))}>\r\n                            <DeleteIcon color=\"error\" />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"resources-name\"\r\n                  label=\"Resources Name\"\r\n                  variant=\"outlined\"\r\n                  value={resource.name}\r\n                  onChange={(e) => setResource({ ...resource, name: e.target.value })}\r\n                  className={classes.formControl}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">Resource Link</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"resource-link\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Collapse\r\n                in={contentUpload.resourceBtn}\r\n                timeout=\"auto\"\r\n                unmountOnExit\r\n                style={{ width: '100%' }}\r\n              >\r\n                <Grid item xs={12}>\r\n                  <FileUpload type=\"any file\" />\r\n                </Grid>\r\n              </Collapse>\r\n\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">We will cover</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"resource-link\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">Requirments</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"resource-link\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">Projects for</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"resource-link\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  className={classes.submit}\r\n                  fullWidth\r\n                >\r\n                  {state.id === '' ? 'Add a new project' : 'Update the project'}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","/* eslint-disable react/jsx-curly-newline */\r\nimport React, { useState, useEffect } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport { Button } from '@material-ui/core';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Link from '@material-ui/core/Link';\r\nimport FileUpload from '../FileUpload';\r\nimport {\r\n  setName,\r\n  setDescription,\r\n  setType,\r\n  setImg,\r\n  setVideo,\r\n  setMarkdown,\r\n  setQuiz,\r\n  setExam,\r\n  setAssignment,\r\n  addResource,\r\n  deleteResource,\r\n  reset,\r\n} from '../../store/Slices/node';\r\nimport { usePost, usePut } from '../../hooks/useAsync';\r\nimport { updateNode, addNode } from '../../store/Slices/nodes';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: '100%',\r\n  },\r\n\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(2, 1),\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n  const state = useSelector((s) => s.node);\r\n  const dispatch = useDispatch();\r\n  const [resource, setResource] = useState({ name: '', uri: '' });\r\n  const [contentUpload, setContentUpload] = useState({\r\n    image: '',\r\n    imgBtn: false,\r\n    video: '',\r\n    videoImg: false,\r\n  });\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const [response, error, post] = usePost();\r\n  const [resPut, errPut, put] = usePut();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (state.id !== '') {\r\n      put('/admin/nodes', {\r\n        id: state.id,\r\n        name: state.name,\r\n        description: state.description,\r\n        img: state.img,\r\n        video: state.video,\r\n        markdown: state.markdown,\r\n        resources: [...state.resources],\r\n        quiz: state.quiz,\r\n        exam: state.exam,\r\n        assignment: state.assignment,\r\n      });\r\n      return;\r\n    }\r\n    post('/admin/nodes', {\r\n      name: state.name,\r\n      description: state.description,\r\n      img: state.img,\r\n      video: state.video,\r\n      markdown: state.markdown,\r\n      resources: [...state.resources],\r\n      quiz: state.quiz,\r\n      exam: state.exam,\r\n      assignment: state.assignment,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (response) {\r\n      setSuccess(true);\r\n      dispatch(\r\n        addNode({\r\n          node: {\r\n            _id: response.id,\r\n            type: state.type,\r\n            name: state.name,\r\n            description: state.description,\r\n            updated: new Date().toString(),\r\n            img: state.img,\r\n            video: state.video,\r\n            creator: {\r\n              _id: localStorage.getItem('_id'),\r\n              name: localStorage.getItem('name'),\r\n            },\r\n          },\r\n        })\r\n      );\r\n      window.setTimeout(() => {\r\n        setSuccess(false);\r\n        dispatch(reset());\r\n        setResource({ name: '', uri: '' });\r\n      }, 1000);\r\n    }\r\n  }, [response]);\r\n\r\n  useEffect(() => {\r\n    if (resPut) {\r\n      setSuccess(true);\r\n      dispatch(updateNode({ id: state.id, node: { ...state } }));\r\n\r\n      window.setTimeout(() => {\r\n        setSuccess(false);\r\n        dispatch(reset());\r\n        setResource({ name: '', uri: '' });\r\n      }, 1000);\r\n    }\r\n  }, [resPut]);\r\n\r\n  useEffect(() => {\r\n    console.log('error', error);\r\n  }, [error]);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\">\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n            Add Goal\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {success && (\r\n            <Typography color=\"primary\" align=\"center\">\r\n              {state.id === '' ? 'Goal added successfully :)' : 'Goal updated successfully :)'}\r\n            </Typography>\r\n          )}\r\n          <form className={classes.form} noValidate={false} onSubmit={submitHandler}>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"price\"\r\n                  label=\"Price\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  value={state.name}\r\n                  onChange={(event) => dispatch(setName(event.target.value))}\r\n                  className={classes.formControl}\r\n                  error={error?.name}\r\n                  helperText={error?.name}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"name\"\r\n                  label=\"Name\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  value={state.name}\r\n                  onChange={(event) => dispatch(setName(event.target.value))}\r\n                  className={classes.formControl}\r\n                  error={error?.name}\r\n                  helperText={error?.name}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"description\"\r\n                  label=\"Description\"\r\n                  required\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  value={state.description}\r\n                  onChange={(event) => dispatch(setDescription(event.target.value))}\r\n                  className={classes.formControl}\r\n                  error={error?.description}\r\n                  helperText={error?.description}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\" error={error?.img}>\r\n                  <InputLabel htmlFor=\"image\">Image Link</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"image\"\r\n                    value={state.img}\r\n                    onChange={(event) => dispatch(setImg(event.target.value))}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle image upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({ ...contentUpload, imgBtn: !contentUpload.imgBtn })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.imgBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={85}\r\n                  />\r\n                  {error?.img && <FormHelperText>{error?.img}</FormHelperText>}\r\n                </FormControl>\r\n              </Grid>\r\n              <Collapse\r\n                in={contentUpload.imgBtn}\r\n                timeout=\"auto\"\r\n                unmountOnExit\r\n                style={{ width: '100%' }}\r\n              >\r\n                <Grid item xs={12}>\r\n                  <FileUpload type=\"image\" />\r\n                </Grid>\r\n              </Collapse>\r\n              <Grid item xs={12}>\r\n                <FormControl\r\n                  className={classes.formControl}\r\n                  variant=\"outlined\"\r\n                  error={error?.video}\r\n                >\r\n                  <InputLabel htmlFor=\"video\">Video Link</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"video\"\r\n                    value={state.video}\r\n                    onChange={(event) => dispatch(setVideo(event.target.value))}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              videoBtn: !contentUpload.videoBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.videoBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={85}\r\n                  />\r\n                  {error?.video && <FormHelperText>{error?.video}</FormHelperText>}\r\n                </FormControl>\r\n              </Grid>\r\n              <Collapse\r\n                in={contentUpload.videoBtn}\r\n                timeout=\"auto\"\r\n                unmountOnExit\r\n                style={{ width: '100%' }}\r\n              >\r\n                <Grid item xs={12}>\r\n                  <FileUpload type=\"video\" />\r\n                </Grid>\r\n              </Collapse>\r\n\r\n              <Grid item xs={12}>\r\n                {error?.resources && (\r\n                  <Typography color=\"error\" align=\"center\">\r\n                    {error?.resources}\r\n                  </Typography>\r\n                )}\r\n                <Grid container spacing={2} style={{ paddingLeft: '5', paddingRight: '5' }}>\r\n                  {state.resources.map((res) => (\r\n                    <Grid item xs={12} sm={6} key={res.id}>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={1}>\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              for (let idx = 0; idx < state.resources.length; idx += 1) {\r\n                                if (res.id === state.resources[idx].id) {\r\n                                  setResource({\r\n                                    name: state.resources[idx].name,\r\n                                    uri: state.resources[idx].uri,\r\n                                  });\r\n                                  dispatch(deleteResource({ id: res.id }));\r\n                                  break;\r\n                                }\r\n                              }\r\n                            }}\r\n                          >\r\n                            <EditIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={10}\r\n                          style={{\r\n                            paddingTop: 20,\r\n                            paddingLeft: 20,\r\n                            wordWrap: 'break-word',\r\n                          }}\r\n                        >\r\n                          <Link href={res.uri}>{res.name}</Link>\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n                          <IconButton onClick={() => dispatch(deleteResource({ id: res.id }))}>\r\n                            <DeleteIcon color=\"error\" />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">Course ID</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"node-id\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">Exam ID</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"node-id\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">Project ID</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"node-id\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">Assignment ID</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"node-id\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n\r\n              <Grid item xs={12}>\r\n                {error?.resources && (\r\n                  <Typography color=\"error\" align=\"center\">\r\n                    {error?.resources}\r\n                  </Typography>\r\n                )}\r\n                <Grid container spacing={2} style={{ paddingLeft: '5', paddingRight: '5' }}>\r\n                  {state.resources.map((res) => (\r\n                    <Grid item xs={12} sm={6} key={res.id}>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={1}>\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              for (let idx = 0; idx < state.resources.length; idx += 1) {\r\n                                if (res.id === state.resources[idx].id) {\r\n                                  setResource({\r\n                                    name: state.resources[idx].name,\r\n                                    uri: state.resources[idx].uri,\r\n                                  });\r\n                                  dispatch(deleteResource({ id: res.id }));\r\n                                  break;\r\n                                }\r\n                              }\r\n                            }}\r\n                          >\r\n                            <EditIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                        <Grid\r\n                          item\r\n                          xs={10}\r\n                          style={{\r\n                            paddingTop: 20,\r\n                            paddingLeft: 20,\r\n                            wordWrap: 'break-word',\r\n                          }}\r\n                        >\r\n                          <Link href={res.uri}>{res.name}</Link>\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n                          <IconButton onClick={() => dispatch(deleteResource({ id: res.id }))}>\r\n                            <DeleteIcon color=\"error\" />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"resources-name\"\r\n                  label=\"Resources Name\"\r\n                  variant=\"outlined\"\r\n                  value={resource.name}\r\n                  onChange={(e) => setResource({ ...resource, name: e.target.value })}\r\n                  className={classes.formControl}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">Resource Link</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"resource-link\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Collapse\r\n                in={contentUpload.resourceBtn}\r\n                timeout=\"auto\"\r\n                unmountOnExit\r\n                style={{ width: '100%' }}\r\n              >\r\n                <Grid item xs={12}>\r\n                  <FileUpload type=\"any file\" />\r\n                </Grid>\r\n              </Collapse>\r\n\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">We will cover</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"resource-link\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">Requirments</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"resource-link\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs={10} sm={5}>\r\n                <FormControl className={classes.formControl} variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"resource-link\">Goals for</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"resource-link\"\r\n                    value={resource.uri}\r\n                    onChange={(e) => setResource({ ...resource, uri: e.target.value })}\r\n                    endAdornment={\r\n                      // eslint-disable-next-line react/jsx-wrap-multilines\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle video upload visibility\"\r\n                          onClick={() =>\r\n                            setContentUpload({\r\n                              ...contentUpload,\r\n                              resourceBtn: !contentUpload.resourceBtn,\r\n                            })\r\n                          }\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {contentUpload.resourceBtn ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={105}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={2} sm={1}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    dispatch(addResource({ name: resource.name, uri: resource.uri }));\r\n                    setResource({ name: '', uri: '' });\r\n                  }}\r\n                >\r\n                  <AddCircleIcon color=\"secondary\" fontSize=\"large\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  className={classes.submit}\r\n                  fullWidth\r\n                >\r\n                  {state.id === '' ? 'Add a new Goal' : 'Update the Goal'}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","/* eslint-disable react/require-default-props */\r\n/* eslint-disable react/forbid-prop-types */\r\n/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport { useDispatch } from 'react-redux';\r\nimport AddNode from '../components/Admin/AddNode';\r\nimport ViewNodes from '../components/Admin/ViewNodes';\r\nimport { useGet } from '../hooks/useAsync';\r\nimport {\r\n  setSuccess as setNodes,\r\n  setFetch as fetchNodes,\r\n  setError as setErrNodes,\r\n} from '../store/Slices/nodes';\r\nimport {\r\n  setSuccess as setCourses,\r\n  setFetch as fetchCourses,\r\n  setError as setErrCourses,\r\n} from '../store/Slices/courses';\r\nimport {\r\n  setSuccess as setGoals,\r\n  setFetch as fetchGoals,\r\n  setError as setErrGoals,\r\n} from '../store/Slices/goals';\r\nimport {\r\n  setSuccess as setProjects,\r\n  setFetch as fetchProjects,\r\n  setError as setErrProjects,\r\n} from '../store/Slices/projects';\r\nimport {\r\n  setSuccess as setExams,\r\n  setFetch as fetchExams,\r\n  setError as setErrExams,\r\n} from '../store/Slices/exams';\r\nimport {\r\n  setSuccess as setAssignments,\r\n  setFetch as fetchAssignments,\r\n  setError as setErrAssignments,\r\n} from '../store/Slices/assignments';\r\nimport {\r\n  setSuccess as setInstructors,\r\n  setFetch as fetchInstructors,\r\n  setError as setErrInstructors,\r\n} from '../store/Slices/instructors';\r\n\r\nimport ViewCourses from '../components/Admin/ViewCourses';\r\nimport ViewGoals from '../components/Admin/ViewGoals';\r\nimport ViewProjects from '../components/Admin/ViewProjects';\r\nimport AddCourse from '../components/Admin/AddCourse';\r\nimport AddProject from '../components/Admin/AddProject';\r\nimport AddGoal from '../components/Admin/AddGoal';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={1}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function ScrollableTabsButtonAuto() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const [res, err, get] = useGet();\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchNodes);\r\n    dispatch(fetchGoals);\r\n    dispatch(fetchProjects);\r\n    dispatch(fetchCourses);\r\n    dispatch(fetchAssignments);\r\n    dispatch(fetchExams);\r\n    dispatch(fetchInstructors);\r\n    get('/admin/get-all');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (res) {\r\n      dispatch(setNodes({ nodes: res.nodes || [] }));\r\n      dispatch(setCourses({ courses: res.courses || [] }));\r\n      dispatch(setProjects({ projects: res.projects || [] }));\r\n      dispatch(setGoals({ goals: res.goals || [] }));\r\n      dispatch(setAssignments({ assignments: res.assignments || [] }));\r\n      dispatch(setExams({ exams: res.exams || [] }));\r\n      dispatch(setInstructors({ instructors: res.instructors || [] }));\r\n    }\r\n  }, [res]);\r\n\r\n  useEffect(() => {\r\n    if (err) {\r\n      dispatch(setErrCourses);\r\n      dispatch(setErrGoals);\r\n      dispatch(setErrNodes);\r\n      dispatch(setErrProjects);\r\n      dispatch(setErrAssignments);\r\n      dispatch(setErrInstructors);\r\n      dispatch(setErrExams);\r\n    }\r\n  }, [err]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        variant=\"scrollable\"\r\n        scrollButtons=\"auto\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab label=\"View Nodes\" {...a11yProps(0)} />\r\n        <Tab label=\"Add Node\" {...a11yProps(1)} />\r\n        <Tab label=\"View Courses\" {...a11yProps(2)} />\r\n        <Tab label=\"Add Course\" {...a11yProps(3)} />\r\n        <Tab label=\"View Projects\" {...a11yProps(4)} />\r\n        <Tab label=\"Add Project\" {...a11yProps(5)} />\r\n        <Tab label=\"View Goals\" {...a11yProps(6)} />\r\n        <Tab label=\"Add Goals\" {...a11yProps(7)} />\r\n        <Tab label=\"View Exams\" {...a11yProps(8)} />\r\n        <Tab label=\"View Assignments\" {...a11yProps(9)} />\r\n        <Tab label=\"View Teachers\" {...a11yProps(10)} />\r\n      </Tabs>\r\n\r\n      <TabPanel value={value} index={0}>\r\n        <ViewNodes switchToAddNode={() => setValue(1)} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <AddNode />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <ViewCourses />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <AddCourse />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        <ViewProjects />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={5}>\r\n        <AddProject />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={6}>\r\n        <ViewGoals />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={7}>\r\n        <AddGoal />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={8}>\r\n        No exams to show\r\n      </TabPanel>\r\n      <TabPanel value={value} index={9}>\r\n        No assignments to show\r\n      </TabPanel>\r\n      <TabPanel value={value} index={10}>\r\n        No teacher to show\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport style from './App.module.scss';\r\nimport AppBar from './components/AppBar';\r\nimport Home from './pages/Home';\r\nimport SignIn from './pages/SignIn';\r\nimport SignUp from './pages/SignUp';\r\nimport NotFound from './pages/NotFound';\r\nimport UnAuthorized from './pages/UnAuthorized';\r\nimport Footer from './components/Footer';\r\nimport Course from './pages/Course';\r\nimport Profile from './pages/Profile';\r\nimport About from './pages/About';\r\nimport ViewAll from './pages/ViewAll';\r\nimport AddItem from './pages/AddItem';\r\nimport Help from './pages/Help';\r\nimport Editor from './pages/Editor';\r\nimport Admin from './pages/Admin';\r\n\r\nfunction App() {\r\n  const loading = useSelector((state) => state.apiCall.loading);\r\n  return (\r\n    <div className={style.app}>\r\n      <header>\r\n        <AppBar />\r\n      </header>\r\n      <div className={style.main}>\r\n        {loading && <LinearProgress />}\r\n        <Grid container>\r\n          {/* <div>sidebar left</div> */}\r\n          <Grid item xs={12}>\r\n            <div className={style.mainContent}>\r\n              <Switch>\r\n                <Route exact path=\"/\">\r\n                  <Home />\r\n                </Route>\r\n                <Route path=\"/sign-in\">\r\n                  <SignIn />\r\n                </Route>\r\n                <Route path=\"/sign-up\">\r\n                  <SignUp />\r\n                </Route>\r\n                <Route path=\"/view/:type/:id\">\r\n                  <Course />\r\n                </Route>\r\n                <Route path=\"/profile/:id\">\r\n                  <Profile />\r\n                </Route>\r\n                <Route path=\"/about\">\r\n                  <About />\r\n                </Route>\r\n                <Route path=\"/help\">\r\n                  <Help />\r\n                </Route>\r\n                <Route path=\"/view-all/:type\">\r\n                  <ViewAll />\r\n                </Route>\r\n                <Route path=\"/editor\">\r\n                  {localStorage.getItem('role') === 'admin' ? <Editor /> : <NotFound />}\r\n                </Route>\r\n                <Route path=\"/admin\">\r\n                  {localStorage.getItem('role') ? <Admin /> : <NotFound />}\r\n                </Route>\r\n                <Route path=\"/unauthorized\">\r\n                  <UnAuthorized />\r\n                </Route>\r\n                <Route path=\"/404\">\r\n                  <NotFound />\r\n                </Route>\r\n                <Route path=\"*\">\r\n                  <NotFound />\r\n                </Route>\r\n              </Switch>\r\n            </div>\r\n          </Grid>\r\n          {/* <div>sidebar right</div> */}\r\n\r\n          <Grid item xs={12}>\r\n            <Footer />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport apiCallReducer from './Slices/apiCall';\r\nimport nodeReducer from './Slices/node';\r\nimport nodesReducer from './Slices/nodes';\r\nimport goalsReducer from './Slices/goals';\r\nimport coursesReducer from './Slices/courses';\r\nimport projectsReducer from './Slices/projects';\r\nimport instructorsReducer from './Slices/instructors';\r\nimport examsReducer from './Slices/exams';\r\nimport assignmentsReducer from './Slices/assignments';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    apiCall: apiCallReducer,\r\n    node: nodeReducer,\r\n    nodes: nodesReducer,\r\n    courses: coursesReducer,\r\n    projects: projectsReducer,\r\n    goals: goalsReducer,\r\n    exams: examsReducer,\r\n    assignments: assignmentsReducer,\r\n    instructors: instructorsReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport App from './App';\r\nimport store from './store';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.scss';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4000';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}